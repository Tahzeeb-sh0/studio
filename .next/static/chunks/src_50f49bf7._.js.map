{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const { config: contextConfig } = useChart()\n\n  const finalConfig = React.useMemo(() => {\n    return Object.entries(config).reduce(\n      (acc, [key, value]) => {\n        const { color, theme } = value\n        const configColor = color || (theme ? theme.light : undefined)\n\n        return {\n          ...acc,\n          [key]: configColor ? `hsl(${configColor})` : undefined,\n        }\n      },\n      {} as Record<string, string | undefined>\n    )\n  }, [config])\n\n  const colorConfig = Object.entries(contextConfig).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: `\n:root {\n${Object.entries(finalConfig)\n  .map(([key, color]) => (color ? `--color-${key}: ${color};` : null))\n  .join(\"\\n\")}\n}\n`,\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nconst Bar = React.forwardRef<\n  React.ElementRef<typeof RechartsPrimitive.Bar>,\n  React.ComponentProps<typeof RechartsPrimitive.Bar>\n>(({ fill, ...props }, ref) => {\n  const { config } = useChart()\n  const key = props.dataKey as string\n  const color = fill || (key && config[key]?.color)\n\n  return (\n    <RechartsPrimitive.Bar\n      ref={ref}\n      {...props}\n      fill={color ? `var(--color-${key})` : undefined}\n    />\n  )\n})\n\nBar.displayName = \"Bar\"\n\nconst {\n  BarChart,\n  AreaChart,\n  LineChart,\n  ComposedChart,\n  PieChart,\n  RadarChart,\n  RadialBarChart,\n  ScatterChart,\n  FunnelChart,\n  Treemap,\n  Sankey,\n  ResponsiveContainer,\n  Legend,\n  Tooltip,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Area,\n  Line,\n  Pie,\n  Radar,\n  RadialBar,\n  Scatter,\n  Funnel,\n  Label,\n  LabelList,\n  ReferenceLine,\n  ReferenceDot,\n  ReferenceArea,\n  ZAxis,\n} = RechartsPrimitive;\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n  Bar,\n  BarChart,\n  AreaChart,\n  LineChart,\n  ComposedChart,\n  PieChart,\n  RadarChart,\n  RadialBarChart,\n  ScatterChart,\n  FunnelChart,\n  Treemap,\n  Sankey,\n  ResponsiveContainer,\n  Legend,\n  Tooltip,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Area,\n  Line,\n  Pie,\n  Radar,\n  RadialBar,\n  Scatter,\n  Funnel,\n  Label,\n  LabelList,\n  ReferenceLine,\n  ReferenceDot,\n  ReferenceArea,\n  ZAxis,\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/approvals/page.tsx"],"sourcesContent":["\n'use client';\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport {\n  Bar,\n  BarChart,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n  ChartContainer,\n  ChartTooltipContent,\n  ChartTooltip\n} from '@/components/ui/chart';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { activities } from '@/lib/mock-data';\nimport { Check, X, ListChecks, CheckCircle2, Clock, Activity, ShieldAlert, BarChart3 } from 'lucide-react';\nimport { format, isToday } from 'date-fns';\nimport { useAuth } from '@/context/auth-context';\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { useToast } from '@/hooks/use-toast';\n\nconst activityCategoryCounts = activities.reduce((acc, activity) => {\n  acc[activity.category] = (acc[activity.category] || 0) + 1;\n  return acc;\n}, {} as Record<string, number>);\n\nconst chartData = Object.entries(activityCategoryCounts).map(([name, count]) => ({\n  name,\n  count,\n}));\n\nconst chartConfig = {\n  count: {\n    label: \"Submissions\",\n    color: \"hsl(var(--primary))\",\n  },\n};\n\n\nexport default function ApprovalsPage() {\n  const { user } = useAuth();\n  const router = useRouter();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (user?.role !== 'faculty') {\n      router.push('/auth/login');\n    }\n  }, [user, router]);\n\n  const handleAction = (action: 'Approved' | 'Rejected', activityTitle: string) => {\n    toast({\n        title: `Action: ${action}`,\n        description: `The activity \"${activityTitle}\" has been marked as ${action}.`,\n    });\n    // In a real app, you would re-fetch data or update state here.\n  }\n\n\n  if (user?.role !== 'faculty') {\n    return (\n        <div className=\"flex flex-col items-center justify-center h-full text-center p-8\">\n            <ShieldAlert className=\"h-16 w-16 text-destructive mb-4\" />\n            <h1 className=\"text-2xl font-bold mb-2\">Access Denied</h1>\n            <p className=\"text-muted-foreground\">You do not have permission to view this page. Please log in as a faculty member.</p>\n             <Button onClick={() => router.push('/auth/login')} className=\"mt-6\">\n                Go to Login\n            </Button>\n        </div>\n    );\n  }\n\n  const pendingActivities = activities.filter(\n    (act) => act.status === 'Pending'\n  );\n  const processedActivities = activities.filter(\n    (act) => act.status === 'Approved' || act.status === 'Rejected'\n  );\n  const approvedToday = activities.filter(\n    (act) => act.status === 'Approved' && isToday(new Date(act.date))\n  );\n\n  return (\n    <div className=\"flex flex-col gap-8 animate-fade-in-up\">\n      <div>\n        <h1 className=\"font-headline text-3xl font-bold tracking-tight\">\n          Faculty Dashboard\n        </h1>\n        <p className=\"text-muted-foreground\">\n          Review student submissions and track activity trends.\n        </p>\n      </div>\n\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Approvals</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{pendingActivities.length}</div>\n            <p className=\"text-xs text-muted-foreground\">Activities awaiting your review.</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Processed</CardTitle>\n            <ListChecks className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{processedActivities.length}</div>\n            <p className=\"text-xs text-muted-foreground\">Total activities reviewed.</p>\n          </CardContent>\n        </Card>\n        <Card>\n           <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Approved Today</CardTitle>\n            <CheckCircle2 className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{approvedToday.length}</div>\n            <p className=\"text-xs text-muted-foreground\">Activities approved today.</p>\n          </CardContent>\n        </Card>\n      </div>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <CardTitle>Pending Submissions</CardTitle>\n            <CardDescription>\n              {pendingActivities.length > 0\n                ? `There are ${pendingActivities.length} activities awaiting your approval.`\n                : 'There are no pending submissions at this time.'}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Student</TableHead>\n                  <TableHead>Activity Title</TableHead>\n                  <TableHead>Category</TableHead>\n                  <TableHead>Date</TableHead>\n                  <TableHead className=\"text-right\">Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {pendingActivities.map((activity) => (\n                  <TableRow key={activity.id}>\n                    <TableCell className=\"font-medium\">\n                      <Link href={`/portfolio/${activity.studentId}`} className=\"hover:underline text-primary\">\n                        {activity.studentName}\n                      </Link>\n                    </TableCell>\n                    <TableCell>{activity.title}</TableCell>\n                    <TableCell>{activity.category}</TableCell>\n                    <TableCell>{format(activity.date, 'PPP')}</TableCell>\n                    <TableCell className=\"text-right\">\n                      <div className=\"flex justify-end gap-2\">\n                        <Button variant=\"outline\" size=\"icon\" className=\"h-8 w-8 text-green-600 hover:text-green-600\" onClick={() => handleAction('Approved', activity.title)}>\n                          <Check className=\"h-4 w-4\" />\n                          <span className=\"sr-only\">Approve</span>\n                        </Button>\n                        <Button variant=\"outline\" size=\"icon\" className=\"h-8 w-8 text-red-600 hover:text-red-600\" onClick={() => handleAction('Rejected', activity.title)}>\n                          <X className=\"h-4 w-4\" />\n                          <span className=\"sr-only\">Reject</span>\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n        <Card className=\"lg:col-span-1\">\n          <CardHeader>\n            <CardTitle>Recently Processed</CardTitle>\n            <CardDescription>\n              Your most recent approvals and rejections.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {processedActivities.slice(0, 5).map((activity) => (\n              <div key={activity.id} className=\"flex items-center\">\n                <div className=\"mr-4 rounded-full bg-muted p-2\">\n                  <Activity className=\"h-5 w-5 text-muted-foreground\" />\n                </div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium leading-none\">{activity.studentName}</p>\n                  <p className=\"text-sm text-muted-foreground\">{activity.title}</p>\n                </div>\n                <Badge variant={activity.status === 'Approved' ? 'default' : 'destructive'}>{activity.status}</Badge>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <BarChart3 />\n            Activity Submission Analytics\n          </CardTitle>\n          <CardDescription>\n            Overview of submitted activities by category.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n            <ChartContainer config={chartConfig} className=\"h-72 w-full\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart data={chartData} layout=\"vertical\" margin={{ left: 80, right: 20 }}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis type=\"number\" id=\"x-axis-1\" />\n                      <YAxis dataKey=\"name\" type=\"category\" tickLine={false} axisLine={false} />\n                       <ChartTooltip\n                        cursor={{fill: 'hsl(var(--muted))'}}\n                        content={<ChartTooltipContent />}\n                      />\n                      <Legend />\n                      <Bar dataKey=\"count\" fill=\"hsl(var(--primary))\" radius={[0, 4, 4, 0]} />\n                  </BarChart>\n              </ResponsiveContainer>\n            </ChartContainer>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}