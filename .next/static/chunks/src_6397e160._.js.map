{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AASA;AACA;;;AAfA;;;;;;AAiBA,MAAM,OAAO,iKAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,6LAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,6LAAC,iKAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;KAXM;AAaN,MAAM,eAAe;;IACnB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;GArBM;;QAGiC,iKAAA,CAAA,iBAAc;;;AAwBrD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH,MAAM,yBAAW,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,KAAK,CAAA,GAAA,6JAAA,CAAA,QAAW,AAAD;IAErB,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,6LAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;;AACA,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,6LAAC,oIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,6LAAC,mKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;;QAfkE;;;;QAAA;;;;AAgBlE,YAAY,WAAW,GAAG;AAE1B,MAAM,gCAAkB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;;QAjBmC;;;;QAAA;;;;AAkBnC,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/mock-test/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { generateMockTestQuestions as generateQuestionsFlow, GenerateMockTestOutput } from \"@/ai/flows/mock-test-generator\";\n\nexport type Question = GenerateMockTestOutput['questions'][0] & { isCorrect?: boolean };\n\nexport async function generateMockTestQuestions(topic: string): Promise<{ questions: Question[] | null, error: string | null }> {\n  if (!process.env.GEMINI_API_KEY) {\n    return {\n      questions: null,\n      error: 'The Mock Test feature is currently offline. An API key is required.',\n    };\n  }\n\n  try {\n    const result = await generateQuestionsFlow({ topic });\n    return {\n      questions: result.questions.map(q => ({...q})),\n      error: null,\n    };\n  } catch (error) {\n    console.error('Error generating mock test questions:', error);\n    return {\n      questions: null,\n      error: 'An unexpected error occurred while generating the quiz.',\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAOsB,4BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;;AACA,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,6LAAC,yMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;;AACA,eAAe,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/mock-test/mock-test.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { generateMockTestQuestions, Question } from './actions';\nimport { Loader2, Sparkles, Wand2, CheckCircle, XCircle } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Label } from '@/components/ui/label';\nimport { Progress } from '@/components/ui/progress';\nimport { cn } from '@/lib/utils';\n\nconst formSchema = z.object({\n  topic: z.string().min(2, { message: 'Please enter a topic.' }),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nexport default function MockTest() {\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n  const [isAnswerSubmitted, setIsAnswerSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { topic: '' },\n  });\n\n  const onSubmit: SubmitHandler<FormValues> = async (data) => {\n    setIsLoading(true);\n    setQuestions([]);\n    setQuizFinished(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n\n    const result = await generateMockTestQuestions(data.topic);\n    setIsLoading(false);\n\n    if (result.error) {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: result.error,\n      });\n    } else if (result.questions) {\n      setQuestions(result.questions);\n      toast({\n        title: 'Quiz Ready!',\n        description: `Your quiz on \"${data.topic}\" has been generated.`,\n      });\n    }\n  };\n\n  const handleAnswerSubmit = () => {\n    if (selectedAnswer === null) return;\n\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedAnswer === currentQuestion.answer) {\n      setScore((prev) => prev + 1);\n    }\n    setIsAnswerSubmitted(true);\n  };\n\n  const handleNextQuestion = () => {\n    setIsAnswerSubmitted(false);\n    setSelectedAnswer(null);\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex((prev) => prev + 1);\n    } else {\n      setQuizFinished(true);\n    }\n  };\n\n  const restartQuiz = () => {\n    setQuestions([]);\n    setQuizFinished(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    form.reset();\n  };\n\n  if (quizFinished) {\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle>Quiz Results</CardTitle>\n                <CardDescription>You scored {score} out of {questions.length}!</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n                <div className=\"flex items-center gap-4\">\n                    <p className=\"text-lg font-bold\">Your Score: {((score / questions.length) * 100).toFixed(0)}%</p>\n                    <Progress value={(score / questions.length) * 100} className=\"w-[60%]\" />\n                </div>\n                 <div className=\"space-y-2\">\n                    {questions.map((q, index) => (\n                        <div key={index} className=\"flex items-center gap-2 text-sm\">\n                            {q.isCorrect ? <CheckCircle className=\"h-4 w-4 text-green-500\" /> : <XCircle className=\"h-4 w-4 text-destructive\" />}\n                            <span className={cn(!q.isCorrect && \"line-through\")}>Question {index + 1}</span>\n                            {!q.isCorrect && <span className=\"text-muted-foreground\">(Correct: {q.answer})</span>}\n                        </div>\n                    ))}\n                </div>\n            </CardContent>\n            <CardFooter>\n                 <Button onClick={restartQuiz}>Take Another Quiz</Button>\n            </CardFooter>\n        </Card>\n    )\n  }\n\n  if (questions.length > 0) {\n    const currentQuestion = questions[currentQuestionIndex];\n    const progress = ((currentQuestionIndex + 1) / questions.length) * 100;\n    \n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Quiz: {form.getValues('topic')}</CardTitle>\n          <CardDescription>Question {currentQuestionIndex + 1} of {questions.length}</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n            <Progress value={progress} />\n            <p className=\"font-semibold text-lg\">{currentQuestion.question}</p>\n            <RadioGroup\n                value={selectedAnswer || undefined}\n                onValueChange={setSelectedAnswer}\n                disabled={isAnswerSubmitted}\n            >\n                {currentQuestion.options.map((option, index) => {\n                    const isCorrect = option === currentQuestion.answer;\n                    const isSelected = option === selectedAnswer;\n                    \n                    return (\n                        <div key={index} className={cn(\n                            \"flex items-center space-x-2 p-3 rounded-md border transition-all\",\n                            isAnswerSubmitted && isCorrect && \"border-green-500 bg-green-500/10\",\n                            isAnswerSubmitted && !isCorrect && isSelected && \"border-destructive bg-destructive/10\"\n                        )}>\n                            <RadioGroupItem value={option} id={`option-${index}`} />\n                            <Label htmlFor={`option-${index}`} className=\"flex-1 cursor-pointer\">{option}</Label>\n                            {isAnswerSubmitted && isCorrect && <CheckCircle className=\"h-5 w-5 text-green-500\" />}\n                            {isAnswerSubmitted && !isCorrect && isSelected && <XCircle className=\"h-5 w-5 text-destructive\" />}\n                        </div>\n                    );\n                })}\n            </RadioGroup>\n        </CardContent>\n         <CardFooter>\n            {isAnswerSubmitted ? (\n                <Button onClick={handleNextQuestion} className=\"w-full\">\n                    {currentQuestionIndex < questions.length - 1 ? 'Next Question' : 'Finish Quiz'}\n                </Button>\n            ) : (\n                <Button onClick={handleAnswerSubmit} className=\"w-full\" disabled={selectedAnswer === null}>\n                    Submit Answer\n                </Button>\n            )}\n        </CardFooter>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Start a New Quiz</CardTitle>\n        <CardDescription>Enter a topic, and our AI will generate a short multiple-choice quiz for you.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"topic\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Quiz Topic</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g., React Hooks, Python Data Structures, World History\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <Button type=\"submit\" disabled={isLoading}>\n              {isLoading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Wand2 className=\"mr-2 h-4 w-4\" />}\n              Generate Quiz\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}