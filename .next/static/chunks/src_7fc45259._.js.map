{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/contact-student-generator.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A Genkit flow for generating a professional contact email to a student.\n *\n * - generateContactEmail - A function that generates an email from a recruiter to a student.\n * - GenerateContactEmailInput - The input type for the function.\n * - GenerateContactEmailOutput - The return type for the function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateContactEmailInputSchema = z.object({\n  studentName: z.string().describe(\"The student's name.\"),\n  companyName: z.string().describe(\"The recruiter's company name.\"),\n  recruiterName: z.string().describe(\"The recruiter's name.\"),\n  jobTitle: z.string().describe('The job title or opportunity being presented.'),\n  message: z.string().describe('A brief, personal message from the recruiter to the student.'),\n});\nexport type GenerateContactEmailInput = z.infer<typeof GenerateContactEmailInputSchema>;\n\nconst GenerateContactEmailOutputSchema = z.object({\n  emailBody: z.string().describe('The generated professional email body.'),\n});\nexport type GenerateContactEmailOutput = z.infer<typeof GenerateContactEmailOutputSchema>;\n\nexport async function generateContactEmail(\n  input: GenerateContactEmailInput\n): Promise<GenerateContactEmailOutput> {\n  return generateContactEmailFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'contactStudentPrompt',\n  input: {schema: GenerateContactEmailInputSchema},\n  output: {schema: GenerateContactEmailOutputSchema},\n  prompt: `You are an assistant for a recruiter. Your task is to draft a professional and engaging email to a university student about a job opportunity.\n\nStudent's Name: {{{studentName}}}\nCompany: {{{companyName}}}\nRecruiter's Name: {{{recruiterName}}}\nJob Title/Opportunity: {{{jobTitle}}}\nPersonal Message from Recruiter:\n{{{message}}}\n\nBased on this information, generate a compelling email body. The email should:\n1.  Start with a polite greeting to {{{studentName}}}.\n2.  Introduce {{{recruiterName}}} from {{{companyName}}}.\n3.  Mention that the recruiter was impressed with the student's portfolio.\n4.  Incorporate the personal message naturally.\n5.  Briefly mention the {{{jobTitle}}} opportunity.\n6.  Suggest the next steps (e.g., a brief chat).\n7.  End with a professional closing.\n\nDo not include a subject line, just the email body.\n  `,\n});\n\nconst generateContactEmailFlow = ai.defineFlow(\n  {\n    name: 'generateContactEmailFlow',\n    inputSchema: GenerateContactEmailInputSchema,\n    outputSchema: GenerateContactEmailOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA2BsB,uBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/portfolio/contact-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useToast } from '@/hooks/use-toast';\nimport { generateContactEmail } from '@/ai/flows/contact-student-generator';\nimport { useState } from 'react';\nimport { Loader2, Send, Wand2 } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface ContactFormProps {\n  studentName: string;\n  studentEmail: string;\n  onSend: () => void;\n}\n\nconst formSchema = z.object({\n  companyName: z.string().min(2, 'Company name is required.'),\n  recruiterName: z.string().min(2, 'Your name is required.'),\n  recruiterEmail: z.string().email('Please enter a valid email.'),\n  jobTitle: z.string().min(3, 'Job title is required.'),\n  message: z.string().min(10, 'Message must be at least 10 characters.'),\n});\n\nexport default function ContactForm({ studentName, studentEmail, onSend }: ContactFormProps) {\n  const { toast } = useToast();\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isSending, setIsSending] = useState(false);\n  const [generatedEmail, setGeneratedEmail] = useState('');\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      companyName: '',\n      recruiterName: '',\n      recruiterEmail: '',\n      jobTitle: '',\n      message: '',\n    },\n  });\n\n  const handleGenerateEmail = async () => {\n    const values = form.getValues();\n    const validation = formSchema.safeParse(values);\n    if (!validation.success) {\n      form.trigger();\n      return;\n    }\n\n    setIsGenerating(true);\n    setGeneratedEmail('');\n    try {\n      const result = await generateContactEmail({\n        studentName,\n        ...values,\n      });\n      setGeneratedEmail(result.emailBody);\n      toast({\n        title: 'Email Draft Generated!',\n        description: 'Review the AI-generated email below.',\n      });\n    } catch (error) {\n      toast({\n        variant: 'destructive',\n        title: 'Generation Failed',\n        description: 'Could not generate email draft at this time.',\n      });\n    }\n    setIsGenerating(false);\n  };\n  \n  const handleSendMessageClick = () => {\n    const values = form.getValues();\n    const subject = `Opportunity from ${values.companyName}: ${values.jobTitle}`;\n    const mailtoLink = `mailto:${studentEmail}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(generatedEmail)}`;\n    window.location.href = mailtoLink;\n    onSend();\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={(e) => e.preventDefault()} className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormField\n            control={form.control}\n            name=\"recruiterName\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Your Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"John Doe\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n           <FormField\n            control={form.control}\n            name=\"recruiterEmail\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Your Email</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"john.doe@company.com\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n         <FormField\n            control={form.control}\n            name=\"companyName\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Company Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Acme Inc.\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n           <FormField\n            control={form.control}\n            name=\"jobTitle\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Job Title / Opportunity</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Software Engineer Intern\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        <FormField\n          control={form.control}\n          name=\"message\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Brief Message</FormLabel>\n              <FormControl>\n                <Textarea placeholder={`A short, personal message for ${studentName}...`} {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <div className=\"flex justify-end\">\n            <Button type=\"button\" variant=\"outline\" onClick={handleGenerateEmail} disabled={isGenerating}>\n              {isGenerating ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Wand2 className=\"mr-2 h-4 w-4\" />}\n              Generate Email Draft\n            </Button>\n        </div>\n\n        {generatedEmail && (\n            <Card>\n                <CardHeader>\n                    <CardTitle className='text-base'>AI-Generated Email Draft</CardTitle>\n                    <CardDescription>To: {studentEmail}</CardDescription>\n                </CardHeader>\n                <CardContent>\n                     <div className=\"prose prose-sm dark:prose-invert max-w-none bg-muted/50 p-4 rounded-md whitespace-pre-wrap\">\n                        {generatedEmail}\n                    </div>\n                </CardContent>\n            </Card>\n        )}\n\n        <Button type=\"button\" onClick={handleSendMessageClick} className=\"w-full\" disabled={!generatedEmail || isSending}>\n          {isSending ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Send className=\"mr-2 h-4 w-4\" />}\n          Send Message to {studentName}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}