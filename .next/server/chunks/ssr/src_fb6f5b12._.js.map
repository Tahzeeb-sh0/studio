{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,qKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,qKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,8OAAC,qKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,qKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,qKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,8OAAC;YAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,qKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/portfolio/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { generateCoverLetter } from \"@/ai/flows/cover-letter-generator\";\nimport { activities, users } from \"@/lib/mock-data\";\nimport { z } from \"zod\";\nimport { format } from \"date-fns\";\n\nconst CoverLetterSchema = z.object({\n  jobDescription: z.string().min(50, \"Please provide a more detailed job description.\"),\n  studentId: z.string(),\n  studentName: z.string(),\n});\n\nexport async function generateCoverLetterAction(prevState: any, formData: FormData) {\n  const validatedFields = CoverLetterSchema.safeParse({\n    jobDescription: formData.get('jobDescription'),\n    studentId: formData.get('studentId'),\n    studentName: formData.get('studentName'),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      message: \"Validation failed\",\n      errors: validatedFields.error.flatten().fieldErrors,\n      coverLetter: \"\",\n    };\n  }\n\n  const { studentId, studentName, jobDescription } = validatedFields.data;\n\n  const student = users.find(u => u.id === studentId);\n  if (!student) {\n    return {\n      message: \"Student not found.\",\n      coverLetter: \"\",\n      errors: {},\n    };\n  }\n\n  const approvedActivities = activities\n    .filter(act => act.status === 'Approved' && act.studentId === studentId)\n    .map(act => `- ${act.title}: ${act.description} (Completed: ${format(act.date, 'PPP')})`)\n    .join('\\n');\n\n  try {\n    const result = await generateCoverLetter({\n        jobDescription: jobDescription,\n        achievements: approvedActivities,\n        studentName: studentName,\n    });\n\n    return {\n      message: \"success\",\n      coverLetter: result.coverLetter,\n      errors: {},\n    };\n  } catch (error) {\n    console.error(\"Error generating cover letter:\", error);\n    return {\n      message: \"An unexpected error occurred while generating the cover letter.\",\n      coverLetter: \"\",\n      errors: {},\n    };\n  }\n}\n\n    "],"names":[],"mappings":";;;;;;IAcsB,4BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/portfolio/cover-letter-generator.tsx"],"sourcesContent":["\n'use client';\n\nimport { useFormState, useFormStatus } from 'react-dom';\nimport { generateCoverLetterAction } from './actions';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Loader2, Sparkles, Wand2 } from 'lucide-react';\nimport { useEffect } from 'react';\nimport { useToast } from '@/hooks/use-toast';\n\nconst initialState = {\n  message: '',\n  errors: {},\n  coverLetter: '',\n};\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending}>\n      {pending ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Wand2 className=\"mr-2 h-4 w-4\" />}\n      Generate Cover Letter\n    </Button>\n  );\n}\n\nexport default function CoverLetterGenerator({ studentId, studentName }: { studentId: string, studentName: string }) {\n  const [state, formAction] = useFormState(generateCoverLetterAction, initialState);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (state.message === 'success' && state.coverLetter) {\n        toast({\n            title: \"Cover Letter Generated!\",\n            description: \"Your new cover letter is ready.\",\n        });\n    } else if (state.message && state.message !== 'success') {\n         toast({\n            variant: \"destructive\",\n            title: \"An error occurred\",\n            description: state.message,\n        });\n    }\n  }, [state, toast]);\n\n  return (\n    <div className=\"space-y-6\">\n      <form action={formAction} className=\"space-y-4\">\n        <input type=\"hidden\" name=\"studentId\" value={studentId} />\n        <input type=\"hidden\" name=\"studentName\" value={studentName} />\n        <div>\n          <label htmlFor=\"jobDescription\" className=\"block text-sm font-medium mb-2\">\n            Paste Job Description\n          </label>\n          <Textarea\n            id=\"jobDescription\"\n            name=\"jobDescription\"\n            rows={8}\n            placeholder=\"Paste the full job description here to generate a tailored cover letter...\"\n            className=\"text-sm\"\n          />\n          {state?.errors?.jobDescription && (\n              <p className=\"text-sm font-medium text-destructive mt-2\">{state.errors.jobDescription[0]}</p>\n          )}\n        </div>\n        <div className=\"flex justify-end\">\n          <SubmitButton />\n        </div>\n      </form>\n      \n      {state.coverLetter && (\n        <Card className=\"flex flex-col\">\n            <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                    <Sparkles className=\"text-primary\" />\n                    Generated Cover Letter\n                </CardTitle>\n                 <CardDescription>\n                    Review and copy your generated cover letter below.\n                </CardDescription>\n            </CardHeader>\n            <CardContent>\n                <div className=\"prose prose-sm dark:prose-invert max-w-none bg-muted/50 p-4 rounded-md whitespace-pre-wrap\">\n                    {state.coverLetter}\n                </div>\n            </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n\n    "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AATA;;;;;;;;;;AAWA,MAAM,eAAe;IACnB,SAAS;IACT,QAAQ,CAAC;IACT,aAAa;AACf;AAEA,SAAS;IACP,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,4MAAA,CAAA,gBAAa,AAAD;IAChC,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,MAAK;QAAS,UAAU;;YAC7B,wBAAU,8OAAC,iNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;qCAAiC,8OAAC,+MAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;YAAkB;;;;;;;AAIxG;AAEe,SAAS,qBAAqB,EAAE,SAAS,EAAE,WAAW,EAA8C;IACjH,MAAM,CAAC,OAAO,WAAW,GAAG,CAAA,GAAA,4MAAA,CAAA,eAAY,AAAD,EAAE,+JAAA,CAAA,4BAAyB,EAAE;IACpE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,MAAM,OAAO,KAAK,aAAa,MAAM,WAAW,EAAE;YAClD,MAAM;gBACF,OAAO;gBACP,aAAa;YACjB;QACJ,OAAO,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO,KAAK,WAAW;YACpD,MAAM;gBACH,SAAS;gBACT,OAAO;gBACP,aAAa,MAAM,OAAO;YAC9B;QACJ;IACF,GAAG;QAAC;QAAO;KAAM;IAEjB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAK,QAAQ;gBAAY,WAAU;;kCAClC,8OAAC;wBAAM,MAAK;wBAAS,MAAK;wBAAY,OAAO;;;;;;kCAC7C,8OAAC;wBAAM,MAAK;wBAAS,MAAK;wBAAc,OAAO;;;;;;kCAC/C,8OAAC;;0CACC,8OAAC;gCAAM,SAAQ;gCAAiB,WAAU;0CAAiC;;;;;;0CAG3E,8OAAC,oIAAA,CAAA,WAAQ;gCACP,IAAG;gCACH,MAAK;gCACL,MAAM;gCACN,aAAY;gCACZ,WAAU;;;;;;4BAEX,OAAO,QAAQ,gCACZ,8OAAC;gCAAE,WAAU;0CAA6C,MAAM,MAAM,CAAC,cAAc,CAAC,EAAE;;;;;;;;;;;;kCAG9F,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;;;;;;;;;;;;;;;;YAIJ,MAAM,WAAW,kBAChB,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACZ,8OAAC,gIAAA,CAAA,aAAU;;0CACP,8OAAC,gIAAA,CAAA,YAAS;gCAAC,WAAU;;kDACjB,8OAAC,0MAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAGxC,8OAAC,gIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAItB,8OAAC,gIAAA,CAAA,cAAW;kCACR,cAAA,8OAAC;4BAAI,WAAU;sCACV,MAAM,WAAW;;;;;;;;;;;;;;;;;;;;;;;AAOtC","debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/portfolio/%5BstudentId%5D/portfolio-client-content.tsx"],"sourcesContent":["\n'use client';\n\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from '@/components/ui/accordion';\nimport { Badge } from '@/components/ui/badge';\nimport { Bot, Award } from 'lucide-react';\nimport { Activity, ActivityCategory, Student } from '@/lib/types';\nimport CoverLetterGenerator from '../cover-letter-generator';\nimport { format } from 'date-fns';\nimport { useAuth } from '@/context/auth-context';\nimport { academicRecord } from '@/lib/mock-data';\n\ninterface PortfolioClientContentProps {\n    student: Student;\n    approvedActivities: Activity[];\n    totalActivityCredits: number;\n    groupedActivities: Record<ActivityCategory, Activity[]>;\n}\n\nexport default function PortfolioClientContent({ \n    student,\n    approvedActivities,\n    totalActivityCredits,\n    groupedActivities,\n}: PortfolioClientContentProps) {\n  const { user: loggedInUser } = useAuth();\n  const isOwner = loggedInUser && loggedInUser.id === student.id;\n\n  return (\n    <div className=\"grid gap-8 p-8 md:grid-cols-3\">\n          <div className=\"md:col-span-2 space-y-8\">\n            <section>\n              <h3 className=\"font-headline text-2xl font-semibold mb-4 border-b pb-2\">Verified Achievements</h3>\n              {approvedActivities.length > 0 ? (\n                <Accordion type=\"multiple\" defaultValue={Object.keys(groupedActivities)} className=\"w-full\">\n                  {Object.entries(groupedActivities).map(([category, acts]) => (\n                    <AccordionItem key={category} value={category}>\n                      <AccordionTrigger className=\"font-headline text-lg\">{category}</AccordionTrigger>\n                      <AccordionContent>\n                        <ul className=\"space-y-4 pl-2\">\n                          {acts.map(act => (\n                            <li key={act.id} className=\"border-l-2 border-primary pl-4\">\n                              <p className=\"font-semibold\">{act.title}</p>\n                              <p className=\"text-sm text-muted-foreground\">{act.description}</p>\n                              <p className=\"text-xs text-muted-foreground mt-1\">\n                                Completed on: {format(act.date, 'PPP')}\n                              </p>\n                            </li>\n                          ))}\n                        </ul>\n                      </AccordionContent>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n              ) : (\n                <p className=\"text-muted-foreground\">No approved achievements yet.</p>\n              )}\n            </section>\n             {isOwner && (\n              <section>\n                <h3 className=\"flex items-center gap-2 font-headline text-2xl font-semibold mb-4 border-b pb-2\">\n                  <Bot />\n                  AI Cover Letter Generator\n                </h3>\n                <CoverLetterGenerator studentId={student.id} studentName={student.name} />\n              </section>\n            )}\n          </div>\n          <aside className=\"space-y-8\">\n            <Card className=\"transition-all duration-300 ease-in-out hover:shadow-2xl hover:shadow-primary/20\">\n                <CardHeader>\n                    <CardTitle className=\"font-headline\">Education</CardTitle>\n                </CardHeader>\n                <CardContent>\n                    <p className=\"font-semibold\">University Name</p>\n                    <p>Bachelor of Science in {student.major}</p>\n                    <p className=\"text-sm text-muted-foreground\">Expected Graduation: 2025</p>\n                    {/* Note: GPA is currently mock and not student-specific */}\n                    <p className=\"text-sm mt-2\">Current GPA: {academicRecord.gpa.toFixed(2)}</p>\n                </CardContent>\n            </Card>\n             <Card className=\"transition-all duration-300 ease-in-out hover:shadow-2xl hover:shadow-primary/20\">\n                <CardHeader>\n                    <CardTitle className=\"font-headline\">Skills</CardTitle>\n                </CardHeader>\n                <CardContent>\n                    <div className=\"flex flex-wrap gap-2\">\n                        {student.skills?.map(skill => (\n                            <Badge key={skill} variant=\"secondary\">{skill}</Badge>\n                        ))}\n                    </div>\n                </CardContent>\n            </Card>\n             <Card className=\"transition-all duration-300 ease-in-out hover:shadow-2xl hover:shadow-primary/20\">\n              <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Activity Credits</CardTitle>\n                <Award className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{totalActivityCredits}</div>\n                <p className=\"text-xs text-muted-foreground\">Credits from approved activities.</p>\n              </CardContent>\n            </Card>\n          </aside>\n        </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}