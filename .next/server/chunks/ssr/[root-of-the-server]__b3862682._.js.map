{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/interview-question-generator.ts"],"sourcesContent":["// src/ai/flows/interview-question-generator.ts\n'use server';\n\n/**\n * @fileOverview A Genkit flow for generating interview questions.\n *\n * - generateInterviewQuestions - Generates interview questions based on achievements and a job description.\n * - GenerateInterviewQuestionsInput - The input type for the generateInterviewQuestions function.\n * - GenerateInterviewQuestionsOutput - The return type for the generateInterviewQuestions function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateInterviewQuestionsInputSchema = z.object({\n  achievements: z\n    .string()\n    .describe(\"A list of the student's achievements.\"),\n  jobDescription: z\n    .string()\n    .describe(\n      'The job description for which the interview questions are being generated.'\n    ),\n});\nexport type GenerateInterviewQuestionsInput = z.infer<typeof GenerateInterviewQuestionsInputSchema>;\n\nconst InterviewQuestionSchema = z.object({\n    question: z.string().describe(\"The interview question.\"),\n    reasoning: z.string().describe(\"The reasoning behind why this question is being asked.\"),\n    category: z.string().describe(\"The category of the question (e.g., Behavioral, Technical, Situational).\")\n});\n\nconst GenerateInterviewQuestionsOutputSchema = z.object({\n  questions: z.array(InterviewQuestionSchema).describe('A list of exactly 10 generated interview questions.'),\n});\nexport type GenerateInterviewQuestionsOutput = z.infer<typeof GenerateInterviewQuestionsOutputSchema>;\n\nexport async function generateInterviewQuestions(\n  input: GenerateInterviewQuestionsInput\n): Promise<GenerateInterviewQuestionsOutput> {\n  return generateInterviewQuestionsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'interviewQuestionGeneratorPrompt',\n  input: {schema: GenerateInterviewQuestionsInputSchema},\n  output: {schema: GenerateInterviewQuestionsOutputSchema},\n  prompt: `You are an expert career coach and hiring manager.\n\n  Given the following student achievements and a job description, generate a list of 10 relevant interview questions. The questions should cover a mix of behavioral, technical, and situational categories. For each question, provide a brief reasoning for why it's being asked in relation to the job description and the student's background.\n\n  Student's Achievements:\n  {{{achievements}}}\n\n  Job Description:\n  {{{jobDescription}}}\n  `,\n});\n\nconst generateInterviewQuestionsFlow = ai.defineFlow(\n  {\n    name: 'generateInterviewQuestionsFlow',\n    inputSchema: GenerateInterviewQuestionsInputSchema,\n    outputSchema: GenerateInterviewQuestionsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;AAG/C;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,wCAAwC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CAAC;IACZ,gBAAgB,uIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CACP;AAEN;AAGA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAClC;AAEA,MAAM,yCAAyC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtD,WAAW,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,yBAAyB,QAAQ,CAAC;AACvD;AAGO,eAAe,2BACpB,KAAsC;IAEtC,OAAO,+BAA+B;AACxC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAqC;IACrD,QAAQ;QAAC,QAAQ;IAAsC;IACvD,QAAQ,CAAC;;;;;;;;;EAST,CAAC;AACH;AAEA,MAAM,iCAAiC,mHAAA,CAAA,KAAE,CAAC,UAAU,CAClD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA/BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/text-to-speech.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A Genkit flow for converting text to speech.\n *\n * - textToSpeech - A function that converts a string of text to audio.\n */\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { googleAI } from '@genkit-ai/googleai';\nimport wav from 'wav';\n\nasync function toWav(\n  pcmData: Buffer,\n  channels = 1,\n  rate = 24000,\n  sampleWidth = 2\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const writer = new wav.Writer({\n      channels,\n      sampleRate: rate,\n      bitDepth: sampleWidth * 8,\n    });\n\n    const bufs: any[] = [];\n    writer.on('error', reject);\n    writer.on('data', function (d) {\n      bufs.push(d);\n    });\n    writer.on('end', function () {\n      resolve(Buffer.concat(bufs).toString('base64'));\n    });\n\n    writer.write(pcmData);\n    writer.end();\n  });\n}\n\nconst TextToSpeechOutputSchema = z.object({\n  audio: z.string().describe('The base64 encoded WAV audio file.'),\n});\n\nexport const textToSpeechFlow = ai.defineFlow(\n  {\n    name: 'textToSpeechFlow',\n    inputSchema: z.string(),\n    outputSchema: TextToSpeechOutputSchema,\n  },\n  async (text) => {\n    const { media } = await ai.generate({\n      model: googleAI.model('gemini-2.5-flash-preview-tts'),\n      config: {\n        responseModalities: ['AUDIO'],\n        speechConfig: {\n          voiceConfig: {\n            prebuiltVoiceConfig: { voiceName: 'Algenib' },\n          },\n        },\n      },\n      prompt: text,\n    });\n    if (!media) {\n      throw new Error('no media returned');\n    }\n    const audioBuffer = Buffer.from(\n      media.url.substring(media.url.indexOf(',') + 1),\n      'base64'\n    );\n    const wavAudio = await toWav(audioBuffer);\n    return {\n      audio: 'data:audio/wav;base64,' + wavAudio,\n    };\n  }\n);\n\nexport async function textToSpeech(text: string) {\n  return textToSpeechFlow(text);\n}\n"],"names":[],"mappings":";;;;;;AACA;;;;CAIC,GACD;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;AAEA,eAAe,MACb,OAAe,EACf,WAAW,CAAC,EACZ,OAAO,KAAK,EACZ,cAAc,CAAC;IAEf,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,MAAM,SAAS,IAAI,4HAAA,CAAA,UAAG,CAAC,MAAM,CAAC;YAC5B;YACA,YAAY;YACZ,UAAU,cAAc;QAC1B;QAEA,MAAM,OAAc,EAAE;QACtB,OAAO,EAAE,CAAC,SAAS;QACnB,OAAO,EAAE,CAAC,QAAQ,SAAU,CAAC;YAC3B,KAAK,IAAI,CAAC;QACZ;QACA,OAAO,EAAE,CAAC,OAAO;YACf,QAAQ,OAAO,MAAM,CAAC,MAAM,QAAQ,CAAC;QACvC;QAEA,OAAO,KAAK,CAAC;QACb,OAAO,GAAG;IACZ;AACF;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC7B;AAEO,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC3C;IACE,MAAM;IACN,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM;IACrB,cAAc;AAChB,GACA,OAAO;IACL,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;QAClC,OAAO,2KAAA,CAAA,WAAQ,CAAC,KAAK,CAAC;QACtB,QAAQ;YACN,oBAAoB;gBAAC;aAAQ;YAC7B,cAAc;gBACZ,aAAa;oBACX,qBAAqB;wBAAE,WAAW;oBAAU;gBAC9C;YACF;QACF;QACA,QAAQ;IACV;IACA,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,cAAc,OAAO,IAAI,CAC7B,MAAM,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,IAC7C;IAEF,MAAM,WAAW,MAAM,MAAM;IAC7B,OAAO;QACL,OAAO,2BAA2B;IACpC;AACF;AAGK,eAAe,aAAa,IAAY;IAC7C,OAAO,iBAAiB;AAC1B;;;IAnCa;IAiCS;;AAjCT,+OAAA;AAiCS,+OAAA","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/interview-coach/actions.ts"],"sourcesContent":["'use server';\n\nimport {\n  generateInterviewQuestions,\n  GenerateInterviewQuestionsInput,\n} from '@/ai/flows/interview-question-generator';\nimport { textToSpeech } from '@/ai/flows/text-to-speech';\nimport { activities, student } from '@/lib/mock-data';\nimport { z } from 'zod';\nimport { format } from 'date-fns';\n\nconst InterviewCoachSchema = z.object({\n  jobDescription: z\n    .string()\n    .min(50, 'Please provide a more detailed job description.'),\n});\n\nconst approvedActivities = activities\n  .filter((act) => act.status === 'Approved' && act.studentId === student.id)\n  .map(\n    (act) =>\n      `- ${act.title}: ${act.description} (Completed: ${format(\n        act.date,\n        'PPP'\n      )})`\n  )\n  .join('\\n');\n\nexport async function generateQuestionsAction(prevState: any, formData: FormData) {\n  const validatedFields = InterviewCoachSchema.safeParse({\n    jobDescription: formData.get('jobDescription'),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      message: 'Validation failed',\n      errors: validatedFields.error.flatten().fieldErrors,\n      questions: [],\n    };\n  }\n\n  try {\n    const result = await generateInterviewQuestions({\n      jobDescription: validatedFields.data.jobDescription,\n      achievements: approvedActivities,\n    });\n\n    return {\n      message: 'success',\n      questions: result.questions,\n      errors: {},\n    };\n  } catch (error) {\n    console.error('Error generating questions:', error);\n    return {\n      message: 'An unexpected error occurred while generating the questions.',\n      questions: [],\n      errors: {},\n    };\n  }\n}\n\n\nexport async function getQuestionAudioAction(question: string) {\n    try {\n        const result = await textToSpeech(question);\n        return {\n            audio: result.audio,\n            error: null,\n        };\n    } catch(e) {\n        console.error(\"Error generating audio:\", e);\n        return {\n            audio: null,\n            error: \"Failed to generate audio for the question.\"\n        }\n    }\n}\n"],"names":[],"mappings":";;;;;;AAEA;AAIA;AACA;AACA;AACA;;;;;;;;;AAEA,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,gBAAgB,oIAAA,CAAA,IAAC,CACd,MAAM,GACN,GAAG,CAAC,IAAI;AACb;AAEA,MAAM,qBAAqB,0HAAA,CAAA,aAAU,CAClC,MAAM,CAAC,CAAC,MAAQ,IAAI,MAAM,KAAK,cAAc,IAAI,SAAS,KAAK,0HAAA,CAAA,UAAO,CAAC,EAAE,EACzE,GAAG,CACF,CAAC,MACC,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,IAAI,WAAW,CAAC,aAAa,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EACrD,IAAI,IAAI,EACR,OACA,CAAC,CAAC,EAEP,IAAI,CAAC;AAED,eAAe,wBAAwB,SAAc,EAAE,QAAkB;IAC9E,MAAM,kBAAkB,qBAAqB,SAAS,CAAC;QACrD,gBAAgB,SAAS,GAAG,CAAC;IAC/B;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,OAAO;YACL,SAAS;YACT,QAAQ,gBAAgB,KAAK,CAAC,OAAO,GAAG,WAAW;YACnD,WAAW,EAAE;QACf;IACF;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,wJAAA,CAAA,6BAA0B,AAAD,EAAE;YAC9C,gBAAgB,gBAAgB,IAAI,CAAC,cAAc;YACnD,cAAc;QAChB;QAEA,OAAO;YACL,SAAS;YACT,WAAW,OAAO,SAAS;YAC3B,QAAQ,CAAC;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;YACL,SAAS;YACT,WAAW,EAAE;YACb,QAAQ,CAAC;QACX;IACF;AACF;AAGO,eAAe,uBAAuB,QAAgB;IACzD,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,0IAAA,CAAA,eAAY,AAAD,EAAE;QAClC,OAAO;YACH,OAAO,OAAO,KAAK;YACnB,OAAO;QACX;IACJ,EAAE,OAAM,GAAG;QACP,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;YACH,OAAO;YACP,OAAO;QACX;IACJ;AACJ;;;IAjDsB;IAmCA;;AAnCA,+OAAA;AAmCA,+OAAA","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/interview-coach/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateQuestionsAction as '60c86158980b575310c75a0c84f27b232186402917'} from 'ACTIONS_MODULE0'\nexport {getQuestionAudioAction as '40ce7f8bab8ce8a688e0435811e820a2cda219e8c3'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 558, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/interview-coach/interview-coach.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/interview-coach/interview-coach.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/interview-coach/interview-coach.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+S,GAC5U,6EACA","debugId":null}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/interview-coach/interview-coach.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/interview-coach/interview-coach.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/interview-coach/interview-coach.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA","debugId":null}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/interview-coach/page.tsx"],"sourcesContent":["import InterviewCoach from \"./interview-coach\";\n\nexport default function InterviewCoachPage() {\n  return (\n    <div className=\"flex flex-col gap-8\">\n      <div>\n        <h1 className=\"font-headline text-3xl font-bold tracking-tight\">\n          AI Interview Coach\n        </h1>\n        <p className=\"text-muted-foreground\">\n          Generate mock interview questions based on a job description to practice and prepare.\n        </p>\n      </div>\n      <InterviewCoach />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAkD;;;;;;kCAGhE,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAIvC,8OAAC,uJAAA,CAAA,UAAc;;;;;;;;;;;AAGrB","debugId":null}}]
}