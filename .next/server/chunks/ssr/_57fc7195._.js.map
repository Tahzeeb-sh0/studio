{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/placeholder-images.ts"],"sourcesContent":["import data from './placeholder-images.json';\n\nexport type ImagePlaceholder = {\n  id: string;\n  description: string;\n  imageUrl: string;\n  imageHint: string;\n};\n\nexport const PlaceHolderImages: ImagePlaceholder[] = data.placeholderImages;\n"],"names":[],"mappings":";;;AAAA;;AASO,MAAM,oBAAwC,2GAAA,CAAA,UAAI,CAAC,iBAAiB","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["\nimport { Student, AcademicRecord, Activity, ActivityCategory, GithubStats, GithubProject, Job } from './types';\nimport { PlaceHolderImages } from './placeholder-images';\n\nconst studentAvatar = PlaceHolderImages.find(img => img.id === 'student-avatar')?.imageUrl || 'https://picsum.photos/seed/student-avatar/100/100';\nconst facultyAvatar = PlaceHolderImages.find(img => img.id === 'faculty-avatar')?.imageUrl || 'https://picsum.photos/seed/faculty-avatar/100/100';\n\nexport const allSkills = [\n  'JavaScript', 'React', 'Node.js', 'Python', 'Data Analysis', \n  'Project Management', 'Public Speaking', 'Team Leadership',\n  'TypeScript', 'Java', 'C++', 'AWS', 'Red Hat', 'Linux', 'Marketing', 'UI/UX Design'\n];\n\nexport const activityCategories: ActivityCategory[] = [\n    'Conference',\n    'Workshop',\n    'Certification',\n    'Club Activity',\n    'Competition',\n    'Internship',\n    'Community Service',\n    'Other',\n];\n\nexport const allMajors = [\n    'Computer Science', 'Data Science', 'Electrical Engineering', 'Business Administration', \n    'Mechanical Engineering', 'Marketing', 'Physics', 'Biology'\n];\n\nconst firstNames = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\", \"Frank\", \"Grace\", \"Heidi\", \"Ivan\", \"Judy\", \"Mallory\", \"Niaj\", \"Olivia\", \"Peggy\", \"Quentin\", \"Rupert\", \"Sybil\", \"Trent\", \"Ulysses\", \"Victor\", \"Walter\", \"Xavier\", \"Yvonne\", \"Zelda\"];\nconst lastNames = [\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Garcia\", \"Miller\", \"Davis\", \"Rodriguez\", \"Martinez\", \"Hernandez\", \"Lopez\", \"Gonzalez\", \"Wilson\", \"Anderson\", \"Thomas\", \"Taylor\", \"Moore\", \"Jackson\", \"Martin\"];\n\n\nconst skillsByMajor: { [key: string]: string[] } = {\n    'Computer Science': ['TypeScript', 'React', 'Node.js', 'AWS', 'Java', 'Python', 'Linux'],\n    'Data Science': ['Python', 'Data Analysis', 'AWS', 'React', 'Machine Learning', 'SQL'],\n    'Electrical Engineering': ['C++', 'Java', 'Linux', 'Circuit Design', 'VHDL'],\n    'Business Administration': ['Project Management', 'Public Speaking', 'Marketing', 'Finance'],\n    'Mechanical Engineering': ['CAD', 'Thermodynamics', 'Project Management', 'Matlab'],\n    'Marketing': ['Marketing', 'Public Speaking', 'UI/UX Design', 'Social Media'],\n    'Physics': ['Python', 'Data Analysis', 'Matlab', 'Quantum Mechanics'],\n    'Biology': ['Data Analysis', 'Genetics', 'Lab Techniques', 'Python']\n};\n\nconst createMockData = () => {\n  const generatedUsers: Student[] = [];\n  let studentIdCounter = 10;\n\n  for (const major of allMajors) {\n    for (let i = 0; i < 100; i++) {\n      const firstName = firstNames[(studentIdCounter + i) % firstNames.length];\n      const lastName = lastNames[(studentIdCounter + i) % lastNames.length];\n      const name = `${firstName} ${lastName}`;\n      const id = `STU-${String(studentIdCounter).padStart(3, '0')}`;\n      const email = `${firstName.toLowerCase()}.${lastName.toLowerCase()}${i}@example.com`;\n      const avatarIndex = (studentIdCounter % 20);\n      const avatarId = `student-avatar-${avatarIndex + 2}`;\n      const avatarUrl = PlaceHolderImages.find(img => img.id === avatarId)?.imageUrl;\n      const studentSkills = skillsByMajor[major] || [];\n      const numSkills = (((studentIdCounter + i) % 3) + 2); // 2 to 4 skills\n      \n      const shuffledSkills = [...studentSkills]\n          .sort((a, b) => (a+b).charCodeAt(0) % 2 - 0.5) // Deterministic shuffle\n          .slice(0, numSkills);\n\n      generatedUsers.push({\n        id,\n        name,\n        email,\n        avatarUrl: avatarUrl || `https://picsum.photos/seed/${id}/100/100`,\n        major,\n        year: ((i % 4) + 1),\n        role: 'student',\n        skills: shuffledSkills,\n        skillRank: i + 1,\n      });\n      studentIdCounter++;\n    }\n  }\n\n  const generatedActivities: Activity[] = [];\n  generatedUsers.forEach((user, userIdx) => {\n    const numActivities = (userIdx % 5) + 1; // 1 to 5 activities\n    for (let i = 0; i < numActivities; i++) {\n      const category = activityCategories[(userIdx + i) % activityCategories.length];\n      generatedActivities.push({\n        id: `ACT-${user.id}-${i}`,\n        studentId: user.id,\n        studentName: user.name,\n        title: `${category} by ${user.name}`,\n        category: category,\n        date: new Date(2023, ((userIdx + i) % 12), ((userIdx + i) % 28) + 1),\n        description: `Generated activity for ${user.name} in ${category}.`,\n        status: 'Approved',\n        credits: ((userIdx + i) % 5) + 1, // 1 to 5 credits\n      });\n    }\n  });\n\n  return { generatedUsers, generatedActivities };\n}\n\n// Memoize the generated data\nconst getGeneratedData = (() => {\n  let cache: { generatedUsers: Student[], generatedActivities: Activity[] } | null = null;\n  return () => {\n    if (cache === null) {\n      cache = createMockData();\n    }\n    return cache;\n  };\n})();\n\nconst { generatedUsers, generatedActivities } = getGeneratedData();\n\n\nexport const users: Student[] = [\n  {\n    id: 'STU-001',\n    name: 'Tahzeeb',\n    email: 'student@gmail.com',\n    avatarUrl: studentAvatar,\n    major: 'Computer Science',\n    year: 3,\n    role: 'student',\n    githubUsername: 'Tahzeeb-sh0',\n    skills: ['TypeScript', 'React', 'Node.js', 'Project Management', 'AWS'],\n    skillRank: 1,\n  },\n  {\n    id: 'FAC-001',\n    name: 'Shweta',\n    email: 'faculty@gmail.com',\n    avatarUrl: facultyAvatar,\n    major: 'Computer Science',\n    year: 0, \n    role: 'faculty',\n  },\n   {\n    id: 'STU-002',\n    name: 'Jane Smith',\n    email: 'jane.smith@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-2')?.imageUrl,\n    major: 'Data Science',\n    year: 4,\n    role: 'student',\n    githubUsername: 'janesmith',\n    skills: ['Python', 'Data Analysis', 'React', 'Red Hat', 'Linux'],\n    skillRank: 1, // Rank 1 in Data Science\n  },\n  {\n    id: 'STU-003',\n    name: 'Sam Wilson',\n    email: 'sam.wilson@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-3')?.imageUrl,\n    major: 'Electrical Engineering',\n    year: 2,\n    role: 'student',\n    skills: ['C++', 'Java', 'AWS', 'Linux'],\n    skillRank: 1, // Rank 1 in EE\n  },\n   {\n    id: 'STU-004',\n    name: 'Emily Davis',\n    email: 'emily.davis@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-4')?.imageUrl,\n    major: 'Business Administration',\n    year: 3,\n    role: 'student',\n    skills: ['Marketing', 'Project Management', 'Public Speaking'],\n    skillRank: 1,\n  },\n  {\n    id: 'STU-005',\n    name: 'Michael Brown',\n    email: 'michael.brown@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-5')?.imageUrl,\n    major: 'Mechanical Engineering',\n    year: 4,\n    role: 'student',\n    skills: ['Project Management', 'Team Leadership'],\n    skillRank: 1,\n  },\n  {\n    id: 'STU-006',\n    name: 'Jessica Garcia',\n    email: 'jessica.garcia@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-6')?.imageUrl,\n    major: 'Marketing',\n    year: 2,\n    role: 'student',\n    githubUsername: 'jessgarcia',\n    skills: ['Marketing', 'Public Speaking', 'UI/UX Design'],\n    skillRank: 1,\n  },\n  {\n    id: 'STU-007',\n    name: 'David Lee',\n    email: 'david.lee@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-7')?.imageUrl,\n    major: 'Physics',\n    year: 3,\n    role: 'student',\n    skills: ['Python', 'Data Analysis'],\n    skillRank: 1,\n  },\n  {\n    id: 'STU-008',\n    name: 'Sarah Martinez',\n    email: 'sarah.martinez@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-8')?.imageUrl,\n    major: 'Biology',\n    year: 4,\n    role: 'student',\n    skills: ['Team Leadership'],\n    skillRank: 1,\n  },\n  ...generatedUsers,\n];\n\nexport const student = users[0]; // Default to Tahzeeb for existing components that rely on a single student\nexport const facultyUser = users[1];\n\nexport const academicRecord: AcademicRecord = {\n  gpa: 3.8,\n  attendance: 95,\n  totalCredits: 120,\n  creditsEarned: 85,\n};\n\nexport const githubStats: GithubStats = {\n  repositories: 25,\n  commits: 531,\n  pullRequests: 42,\n  gists: 5,\n};\n\nexport const githubProjects: GithubProject[] = [\n  {\n    id: 'PROJ-001',\n    name: 'stuverse-app',\n    description: 'The very application you are using! A Next.js app for tracking student achievements.',\n    url: 'https://github.com/Tahzeeb-sh0/stuverse-app',\n    stars: 150,\n    forks: 30,\n    language: 'TypeScript',\n  },\n  {\n    id: 'PROJ-002',\n    name: 'portfolio-generator',\n    description: 'A tool to generate a personal portfolio website from a JSON file, built with React.',\n    url: 'https://github.com/Tahzeeb-sh0/portfolio-generator',\n    stars: 75,\n    forks: 12,\n    language: 'JavaScript',\n  },\n  {\n    id: 'PROJ-003',\n    name: 'genkit-flow-visualizer',\n    description: 'A developer tool to visualize and debug Genkit flows in real-time.',\n    url: 'https://github.com/Tahzeeb-sh0/genkit-flow-visualizer',\n    stars: 200,\n    forks: 45,\n    language: 'TypeScript',\n  },\n];\n\n\nexport const activities: Activity[] = [\n  {\n    id: 'ACT-001',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Web Development Workshop',\n    category: 'Workshop',\n    date: new Date('2023-10-15'),\n    description: 'A week-long workshop on modern web development technologies.',\n    status: 'Approved',\n    credits: 2,\n  },\n  {\n    id: 'ACT-002',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'AI in Healthcare Conference',\n    category: 'Conference',\n    date: new Date('2023-11-05'),\n    description: 'Attended the annual conference on Artificial Intelligence applications in the healthcare sector.',\n    status: 'Approved',\n    credits: 1,\n  },\n  {\n    id: 'ACT-003',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Summer Internship at TechCorp',\n    category: 'Internship',\n    date: new Date('2023-08-30'),\n    description: 'Completed a 3-month summer internship as a software engineering intern.',\n    status: 'Approved',\n    credits: 5,\n  },\n  {\n    id: 'ACT-004',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Hackathon 2023',\n    category: 'Competition',\n    date: new Date('2023-09-20'),\n    description: 'Participated in the university-level hackathon and won 2nd place.',\n    status: 'Approved',\n    credits: 3,\n  },\n  {\n    id: 'ACT-005',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Google Cloud Certified',\n    category: 'Certification',\n    date: new Date('2024-01-10'),\n    description: 'Earned the Associate Cloud Engineer certification from Google Cloud.',\n    status: 'Pending',\n    credits: 4,\n  },\n  {\n    id: 'ACT-006',\n    studentId: 'STU-002',\n    studentName: 'Jane Smith',\n    title: 'Data Science Bootcamp',\n    category: 'Workshop',\n    date: new Date('2024-02-01'),\n    description: 'Intensive bootcamp on data analysis and machine learning.',\n    status: 'Approved',\n    credits: 3,\n  },\n    {\n    id: 'ACT-007',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Leadership Role in Coding Club',\n    category: 'Club Activity',\n    date: new Date('2023-05-20'),\n    description: 'Served as the president of the university coding club for the academic year 2022-2023.',\n    status: 'Approved',\n    credits: 3,\n  },\n  {\n    id: 'ACT-008',\n    studentId: 'STU-003',\n    studentName: 'Sam Wilson',\n    title: 'Community Tree Planting',\n    category: 'Community Service',\n    date: new Date('2023-04-22'),\n    description: 'Volunteered for a local environmental group to plant 100 trees.',\n    status: 'Approved',\n    credits: 1,\n  },\n  {\n    id: 'ACT-009',\n    studentId: 'STU-002',\n    studentName: 'Jane Smith',\n    title: 'National Design Competition',\n    category: 'Competition',\n    date: new Date('2024-03-15'),\n    description: 'Won first place in the national product design competition.',\n    status: 'Approved',\n    credits: 5,\n  },\n  {\n    id: 'ACT-010',\n    studentId: 'STU-003',\n    studentName: 'Sam Wilson',\n    title: 'Robotics Club Project Lead',\n    category: 'Club Activity',\n    date: new Date('2024-04-05'),\n    description: 'Led a team to build an autonomous rover for a university showcase.',\n    status: 'Approved',\n    credits: 3,\n  },\n   {\n    id: 'ACT-011',\n    studentId: 'STU-004',\n    studentName: 'Emily Davis',\n    title: 'Marketing Internship at Adify',\n    category: 'Internship',\n    date: new Date('2023-12-15'),\n    description: 'Managed social media campaigns and analyzed market trends for a startup.',\n    status: 'Approved',\n    credits: 5,\n  },\n  {\n    id: 'ACT-012',\n    studentId: 'STU-002',\n    studentName: 'Jane Smith',\n    title: 'Published Research Paper',\n    category: 'Other',\n    date: new Date('2024-05-01'),\n    description: 'Co-authored a paper on machine learning models for financial forecasting.',\n    status: 'Approved',\n    credits: 6,\n  },\n   {\n    id: 'ACT-013',\n    studentId: 'STU-004',\n    studentName: 'Emily Davis',\n    title: 'Business Case Competition',\n    category: 'Competition',\n    date: new Date('2024-02-20'),\n    description: 'Finalist in the inter-university business case competition.',\n    status: 'Pending',\n    credits: 3,\n  },\n  {\n    id: 'ACT-014',\n    studentId: 'STU-002',\n    studentName: 'Jane Smith',\n    title: 'Red Hat Certified System Administrator (RHCSA)',\n    category: 'Certification',\n    date: new Date('2024-03-20'),\n    description: 'Earned the RHCSA certification, demonstrating core system administration skills for Red Hat Enterprise Linux environments.',\n    status: 'Approved',\n    credits: 4,\n  },\n  {\n    id: 'ACT-015',\n    studentId: 'STU-003',\n    studentName: 'Sam Wilson',\n    title: 'AWS Certified Solutions Architect - Associate',\n    category: 'Certification',\n    date: new Date('2024-04-10'),\n    description: 'Validated technical expertise in designing and deploying scalable, highly available, and fault-tolerant systems on AWS.',\n    status: 'Approved',\n    credits: 5,\n  },\n  {\n    id: 'ACT-016',\n    studentId: 'STU-005',\n    studentName: 'Michael Brown',\n    title: 'ASME Design Competition',\n    category: 'Competition',\n    date: new Date('2023-11-20'),\n    description: 'Team lead for a project that won \"Most Innovative Design\" award.',\n    status: 'Approved',\n    credits: 4,\n  },\n  {\n    id: 'ACT-017',\n    studentId: 'STU-006',\n    studentName: 'Jessica Garcia',\n    title: 'DECA Chapter President',\n    category: 'Club Activity',\n    date: new Date('2024-01-15'),\n    description: 'Led the university DECA chapter, organizing events and competitions.',\n    status: 'Approved',\n    credits: 3,\n  },\n  {\n    id: 'ACT-018',\n    studentId: 'STU-007',\n    studentName: 'David Lee',\n    title: 'Undergraduate Research Symposium',\n    category: 'Conference',\n    date: new Date('2024-04-25'),\n    description: 'Presented research on quantum state simulations.',\n    status: 'Approved',\n    credits: 3,\n  },\n  {\n    id: 'ACT-019',\n    studentId: 'STU-008',\n    studentName: 'Sarah Martinez',\n    title: 'Volunteering at Local Hospital',\n    category: 'Community Service',\n    date: new Date('2023-12-01'),\n    description: 'Completed 100+ hours of volunteer work in the pediatric ward.',\n    status: 'Approved',\n    credits: 2,\n  },\n  {\n    id: 'ACT-020',\n    studentId: 'STU-005',\n    studentName: 'Michael Brown',\n    title: 'Internship at General Motors',\n    category: 'Internship',\n    date: new Date('2024-05-10'),\n    description: 'Six-month co-op focused on electric vehicle battery design.',\n    status: 'Pending',\n    credits: 6,\n  },\n  ...generatedActivities,\n];\n\nexport const jobs: Job[] = [\n    {\n        id: 'JOB-001',\n        title: 'Frontend Developer Intern',\n        company: 'Innovate Inc.',\n        location: 'Remote',\n        type: 'Internship',\n        tags: ['React', 'TypeScript', 'CSS'],\n        description: 'Join our team to build and improve our user-facing features. Ideal for students passionate about UI/UX.',\n        datePosted: new Date('2024-05-20'),\n    },\n    {\n        id: 'JOB-002',\n        title: 'Software Engineer (New Grad)',\n        company: 'Tech Solutions LLC',\n        location: 'New York, NY',\n        type: 'Full-time',\n        tags: ['Java', 'Python', 'AWS'],\n        description: 'Looking for recent graduates to join our backend engineering team. You will work on scalable, cloud-based services.',\n        datePosted: new Date('2024-05-18'),\n    },\n    {\n        id: 'JOB-003',\n        title: 'Data Science Intern',\n        company: 'Data Insights Co.',\n        location: 'San Francisco, CA',\n        type: 'Internship',\n        tags: ['Python', 'SQL', 'Machine Learning'],\n        description: 'Analyze large datasets to extract meaningful insights and contribute to our predictive modeling projects.',\n        datePosted: new Date('2024-05-15'),\n    },\n    {\n        id: 'JOB-004',\n        title: 'Cloud Engineer',\n        company: 'Cloudways',\n        location: 'Austin, TX',\n        type: 'Full-time',\n        tags: ['AWS', 'Linux', 'Node.js'],\n        description: 'Manage and scale our cloud infrastructure. Experience with containerization (Docker, Kubernetes) is a plus.',\n        datePosted: new Date('2024-05-12'),\n    },\n     {\n        id: 'JOB-005',\n        title: 'UI/UX Design Intern',\n        company: 'Creative Minds',\n        location: 'Remote',\n        type: 'Internship',\n        tags: ['Figma', 'UI/UX Design', 'User Research'],\n        description: 'Work alongside our design team to create wireframes, prototypes, and high-fidelity mockups for our mobile app.',\n        datePosted: new Date('2024-05-10'),\n    },\n     {\n        id: 'JOB-006',\n        title: 'Marketing Associate',\n        company: 'Growth Gurus',\n        location: 'Boston, MA',\n        type: 'Full-time',\n        tags: ['Marketing', 'Social Media', 'SEO'],\n        description: 'Develop and execute marketing campaigns across multiple channels to drive user acquisition and engagement.',\n        datePosted: new Date('2024-05-08'),\n    }\n];\n    \n\n    \n\n\n\n    \n\n\n\n    \n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 848, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Area = registerClientReference(\n    function() { throw new Error(\"Attempted to call Area() from the server but Area is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Area\",\n);\nexport const AreaChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call AreaChart() from the server but AreaChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"AreaChart\",\n);\nexport const Bar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Bar() from the server but Bar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Bar\",\n);\nexport const BarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call BarChart() from the server but BarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"BarChart\",\n);\nexport const CartesianGrid = registerClientReference(\n    function() { throw new Error(\"Attempted to call CartesianGrid() from the server but CartesianGrid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"CartesianGrid\",\n);\nexport const Cell = registerClientReference(\n    function() { throw new Error(\"Attempted to call Cell() from the server but Cell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Cell\",\n);\nexport const ChartContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartContainer() from the server but ChartContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartContainer\",\n);\nexport const ChartLegend = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegend() from the server but ChartLegend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartLegend\",\n);\nexport const ChartLegendContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegendContent() from the server but ChartLegendContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartLegendContent\",\n);\nexport const ChartStyle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartStyle() from the server but ChartStyle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartStyle\",\n);\nexport const ChartTooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltip() from the server but ChartTooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartTooltip\",\n);\nexport const ChartTooltipContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltipContent() from the server but ChartTooltipContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartTooltipContent\",\n);\nexport const ComposedChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComposedChart() from the server but ComposedChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ComposedChart\",\n);\nexport const Funnel = registerClientReference(\n    function() { throw new Error(\"Attempted to call Funnel() from the server but Funnel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Funnel\",\n);\nexport const FunnelChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call FunnelChart() from the server but FunnelChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"FunnelChart\",\n);\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Label\",\n);\nexport const LabelList = registerClientReference(\n    function() { throw new Error(\"Attempted to call LabelList() from the server but LabelList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"LabelList\",\n);\nexport const Legend = registerClientReference(\n    function() { throw new Error(\"Attempted to call Legend() from the server but Legend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Legend\",\n);\nexport const Line = registerClientReference(\n    function() { throw new Error(\"Attempted to call Line() from the server but Line is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Line\",\n);\nexport const LineChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call LineChart() from the server but LineChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"LineChart\",\n);\nexport const Pie = registerClientReference(\n    function() { throw new Error(\"Attempted to call Pie() from the server but Pie is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Pie\",\n);\nexport const PieChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call PieChart() from the server but PieChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"PieChart\",\n);\nexport const PolarAngleAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarAngleAxis() from the server but PolarAngleAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"PolarAngleAxis\",\n);\nexport const PolarGrid = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarGrid() from the server but PolarGrid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"PolarGrid\",\n);\nexport const PolarRadiusAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarRadiusAxis() from the server but PolarRadiusAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"PolarRadiusAxis\",\n);\nexport const Radar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Radar() from the server but Radar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Radar\",\n);\nexport const RadarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadarChart() from the server but RadarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"RadarChart\",\n);\nexport const RadialBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadialBar() from the server but RadialBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"RadialBar\",\n);\nexport const RadialBarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadialBarChart() from the server but RadialBarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"RadialBarChart\",\n);\nexport const ReferenceArea = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceArea() from the server but ReferenceArea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ReferenceArea\",\n);\nexport const ReferenceDot = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceDot() from the server but ReferenceDot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ReferenceDot\",\n);\nexport const ReferenceLine = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceLine() from the server but ReferenceLine is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ReferenceLine\",\n);\nexport const ResponsiveContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ResponsiveContainer() from the server but ResponsiveContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ResponsiveContainer\",\n);\nexport const Sankey = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sankey() from the server but Sankey is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Sankey\",\n);\nexport const Scatter = registerClientReference(\n    function() { throw new Error(\"Attempted to call Scatter() from the server but Scatter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Scatter\",\n);\nexport const ScatterChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScatterChart() from the server but ScatterChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ScatterChart\",\n);\nexport const Tooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tooltip() from the server but Tooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Tooltip\",\n);\nexport const Treemap = registerClientReference(\n    function() { throw new Error(\"Attempted to call Treemap() from the server but Treemap is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Treemap\",\n);\nexport const XAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call XAxis() from the server but XAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"XAxis\",\n);\nexport const YAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call YAxis() from the server but YAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"YAxis\",\n);\nexport const ZAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call ZAxis() from the server but ZAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ZAxis\",\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1022, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Area = registerClientReference(\n    function() { throw new Error(\"Attempted to call Area() from the server but Area is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Area\",\n);\nexport const AreaChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call AreaChart() from the server but AreaChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"AreaChart\",\n);\nexport const Bar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Bar() from the server but Bar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Bar\",\n);\nexport const BarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call BarChart() from the server but BarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"BarChart\",\n);\nexport const CartesianGrid = registerClientReference(\n    function() { throw new Error(\"Attempted to call CartesianGrid() from the server but CartesianGrid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"CartesianGrid\",\n);\nexport const Cell = registerClientReference(\n    function() { throw new Error(\"Attempted to call Cell() from the server but Cell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Cell\",\n);\nexport const ChartContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartContainer() from the server but ChartContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartContainer\",\n);\nexport const ChartLegend = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegend() from the server but ChartLegend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartLegend\",\n);\nexport const ChartLegendContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegendContent() from the server but ChartLegendContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartLegendContent\",\n);\nexport const ChartStyle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartStyle() from the server but ChartStyle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartStyle\",\n);\nexport const ChartTooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltip() from the server but ChartTooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartTooltip\",\n);\nexport const ChartTooltipContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltipContent() from the server but ChartTooltipContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartTooltipContent\",\n);\nexport const ComposedChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComposedChart() from the server but ComposedChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ComposedChart\",\n);\nexport const Funnel = registerClientReference(\n    function() { throw new Error(\"Attempted to call Funnel() from the server but Funnel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Funnel\",\n);\nexport const FunnelChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call FunnelChart() from the server but FunnelChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"FunnelChart\",\n);\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Label\",\n);\nexport const LabelList = registerClientReference(\n    function() { throw new Error(\"Attempted to call LabelList() from the server but LabelList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"LabelList\",\n);\nexport const Legend = registerClientReference(\n    function() { throw new Error(\"Attempted to call Legend() from the server but Legend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Legend\",\n);\nexport const Line = registerClientReference(\n    function() { throw new Error(\"Attempted to call Line() from the server but Line is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Line\",\n);\nexport const LineChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call LineChart() from the server but LineChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"LineChart\",\n);\nexport const Pie = registerClientReference(\n    function() { throw new Error(\"Attempted to call Pie() from the server but Pie is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Pie\",\n);\nexport const PieChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call PieChart() from the server but PieChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"PieChart\",\n);\nexport const PolarAngleAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarAngleAxis() from the server but PolarAngleAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"PolarAngleAxis\",\n);\nexport const PolarGrid = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarGrid() from the server but PolarGrid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"PolarGrid\",\n);\nexport const PolarRadiusAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarRadiusAxis() from the server but PolarRadiusAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"PolarRadiusAxis\",\n);\nexport const Radar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Radar() from the server but Radar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Radar\",\n);\nexport const RadarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadarChart() from the server but RadarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"RadarChart\",\n);\nexport const RadialBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadialBar() from the server but RadialBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"RadialBar\",\n);\nexport const RadialBarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadialBarChart() from the server but RadialBarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"RadialBarChart\",\n);\nexport const ReferenceArea = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceArea() from the server but ReferenceArea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ReferenceArea\",\n);\nexport const ReferenceDot = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceDot() from the server but ReferenceDot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ReferenceDot\",\n);\nexport const ReferenceLine = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceLine() from the server but ReferenceLine is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ReferenceLine\",\n);\nexport const ResponsiveContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ResponsiveContainer() from the server but ResponsiveContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ResponsiveContainer\",\n);\nexport const Sankey = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sankey() from the server but Sankey is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Sankey\",\n);\nexport const Scatter = registerClientReference(\n    function() { throw new Error(\"Attempted to call Scatter() from the server but Scatter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Scatter\",\n);\nexport const ScatterChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScatterChart() from the server but ScatterChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ScatterChart\",\n);\nexport const Tooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tooltip() from the server but Tooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Tooltip\",\n);\nexport const Treemap = registerClientReference(\n    function() { throw new Error(\"Attempted to call Treemap() from the server but Treemap is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Treemap\",\n);\nexport const XAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call XAxis() from the server but XAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"XAxis\",\n);\nexport const YAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call YAxis() from the server but YAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"YAxis\",\n);\nexport const ZAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call ZAxis() from the server but ZAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ZAxis\",\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1206, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1266, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx"],"sourcesContent":["\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { academicRecord, activities, student } from '@/lib/mock-data';\nimport {\n  BarChart,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Cell,\n  Bar,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent\n} from '@/components/ui/chart';\nimport { Activity } from '@/lib/types';\nimport { Award, BookOpen, CalendarClock, GraduationCap, Target, Bot, MessageSquareHeart, Briefcase } from 'lucide-react';\nimport { format } from 'date-fns';\nimport Image from 'next/image';\nimport { student as defaultStudent } from '@/lib/mock-data';\nimport { Button } from '@/components/ui/button';\nimport Link from 'next/link';\n\nconst getStatusVariant = (status: Activity['status']) => {\n  switch (status) {\n    case 'Approved':\n      return 'default';\n    case 'Pending':\n      return 'secondary';\n    case 'Rejected':\n      return 'destructive';\n    default:\n      return 'outline';\n  }\n};\n\nconst activityData = activities.reduce((acc, activity) => {\n  const existing = acc.find((item) => item.category === activity.category);\n  if (existing) {\n    existing.count += 1;\n  } else {\n    acc.push({ category: activity.category, count: 1 });\n  }\n  return acc;\n}, [] as { category: string; count: number }[]);\n\nconst totalActivityCredits = activities\n  .filter((act) => act.status === 'Approved')\n  .reduce((sum, act) => sum + act.credits, 0);\n\nconst chartConfig = {\n  count: {\n    label: \"Activities\",\n  },\n};\n\nconst chartColors = [\n  \"hsl(var(--chart-1))\",\n  \"hsl(var(--chart-2))\",\n  \"hsl(var(--chart-3))\",\n  \"hsl(var(--chart-4))\",\n  \"hsl(var(--chart-5))\",\n];\n\nexport default async function DashboardPage() {\n\n  return (\n    <div className=\"flex flex-col gap-8 animate-fade-in-up\">\n      <div>\n        <h1 className=\"font-headline text-3xl font-bold tracking-tight\">\n          Welcome back, {student.name.split(' ')[0]}!\n        </h1>\n        <p className=\"text-muted-foreground\">\n          Here's a snapshot of your achievements and progress.\n        </p>\n      </div>\n\n       <Card>\n        <CardContent className=\"p-6 flex flex-col sm:flex-row items-center gap-6\">\n          <Image\n            src={defaultStudent.avatarUrl}\n            alt=\"AI Twin\"\n            width={80}\n            height={80}\n            className=\"rounded-full border-4 border-primary/50 shadow-lg\"\n            data-ai-hint=\"futuristic avatar\"\n          />\n          <div className=\"text-center sm:text-left flex-grow\">\n            <div className=\"flex items-center gap-2 justify-center sm:justify-start\">\n              <Bot className=\"h-6 w-6 text-primary\"/>\n              <h3 className=\"text-xl font-headline font-semibold text-primary\">Your AI Twin</h3>\n            </div>\n            <p className=\"text-muted-foreground mt-2 italic\">\n              Ready to chat? I can offer personalized insights and encouragement based on your progress.\n            </p>\n          </div>\n            <Button asChild>\n                <Link href=\"/ai-twin\">\n                    <MessageSquareHeart className=\"mr-2 h-4 w-4\" />\n                    Chat with your Twin\n                </Link>\n            </Button>\n        </CardContent>\n      </Card>\n\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">GPA</CardTitle>\n            <GraduationCap className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{academicRecord.gpa.toFixed(2)}</div>\n            <p className=\"text-xs text-muted-foreground\">Your current Grade Point Average.</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Attendance</CardTitle>\n            <CalendarClock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{academicRecord.attendance}%</div>\n            <p className=\"text-xs text-muted-foreground\">Your overall attendance rate.</p>\n          </CardContent>\n        </Card>\n        <Card>\n           <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Activity Credits</CardTitle>\n            <Award className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{totalActivityCredits}</div>\n            <p className=\"text-xs text-muted-foreground\">Credits from approved activities.</p>\n          </CardContent>\n        </Card>\n        <Card>\n           <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Degree Progress</CardTitle>\n            <Target className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n                {academicRecord.creditsEarned} / {academicRecord.totalCredits}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n                {((academicRecord.creditsEarned / academicRecord.totalCredits) * 100).toFixed(0)}% towards your degree.\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-6 lg:grid-cols-5\">\n        <Card className=\"lg:col-span-3\">\n          <CardHeader>\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n              <div>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Briefcase />\n                  Job Portal\n                </CardTitle>\n                <CardDescription>\n                  Explore internships and full-time positions from our partner companies.\n                </CardDescription>\n              </div>\n               <Button asChild size=\"sm\" className=\"mt-4 sm:mt-0\">\n                  <Link href=\"/jobs\">\n                    Browse Jobs\n                  </Link>\n                </Button>\n            </div>\n          </CardHeader>\n          <CardContent>\n             <p className=\"text-sm text-muted-foreground\">\n              Your next career move is just a click away. Find opportunities that match your skills and ambitions.\n            </p>\n          </CardContent>\n        </Card>\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <CardTitle>Activity Breakdown</CardTitle>\n            <CardDescription>\n              Your involvement across different activity types.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"pl-2\">\n            <ChartContainer config={chartConfig} className=\"h-64 w-full\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart\n                  data={activityData}\n                  layout=\"vertical\"\n                  margin={{ left: 10, right: 10, top: 10, bottom: 10 }}\n                  animationDuration={800}\n                >\n                   <defs>\n                     {chartColors.map((color, index) => (\n                        <linearGradient key={`3d-gradient-${index}`} id={`3d-gradient-${index}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                          <stop offset=\"0%\" stopColor={color} stopOpacity={0.7}/>\n                          <stop offset=\"100%\" stopColor={color} stopOpacity={1}/>\n                        </linearGradient>\n                      ))}\n                  </defs>\n                  <YAxis\n                    dataKey=\"category\"\n                    type=\"category\"\n                    tickLine={false}\n                    axisLine={false}\n                    tick={{ fill: 'hsl(var(--muted-foreground))', fontSize: 12 }}\n                    width={110}\n                  />\n                  <XAxis dataKey=\"count\" type=\"number\" hide />\n                  <ChartTooltip\n                    cursor={{ fill: 'hsl(var(--muted))' }}\n                    content={<ChartTooltipContent />}\n                  />\n                  <Bar\n                    dataKey=\"count\"\n                    radius={[0, 4, 4, 0]}\n                    animationDuration={800}\n                  >\n                    {activityData.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={`url(#3d-gradient-${index % chartColors.length})`} />\n                    ))}\n                  </Bar>\n                </BarChart>\n              </ResponsiveContainer>\n            </ChartContainer>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}