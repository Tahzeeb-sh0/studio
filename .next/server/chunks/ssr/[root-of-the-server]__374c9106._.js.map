{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/vision-board-suggestion-generator.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview A Genkit flow for generating suggestions for the vision board.\n *\n * - generateVisionBoardSuggestions - Generates suggestions based on a goal prompt.\n * - GenerateSuggestionsInput - The input type for the function.\n * - GenerateSuggestionsOutput - The return type for the function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\n\nconst GenerateSuggestionsInputSchema = z.object({\n  prompt: z.string().describe('The prompt outlining the user\\'s development goal.'),\n});\nexport type GenerateSuggestionsInput = z.infer<typeof GenerateSuggestionsInputSchema>;\n\nconst SuggestionSchema = z.object({\n  title: z.string().describe('The name of the suggested activity or event (e.g., \"Debate Club\").'),\n  description: z.string().describe('A brief, one-sentence explanation of why this activity is relevant to the user\\'s goal.'),\n});\n\nconst GenerateSuggestionsOutputSchema = z.object({\n  suggestions: z.array(SuggestionSchema).describe('A list of 3 to 4 suggested activities.'),\n});\nexport type GenerateSuggestionsOutput = z.infer<typeof GenerateSuggestionsOutputSchema>;\n\nexport async function generateVisionBoardSuggestions(\n  input: GenerateSuggestionsInput\n): Promise<GenerateSuggestionsOutput> {\n  return generateSuggestionsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'visionBoardSuggestionPrompt',\n  input: { schema: GenerateSuggestionsInputSchema },\n  output: { schema: GenerateSuggestionsOutputSchema },\n  prompt: `You are an AI Mentor for a university student. Your role is to provide actionable and inspiring suggestions to help them achieve their personal development goals.\n\n  The user wants to improve a specific skill. Based on the following request, generate a list of 3-4 concrete activities, events, or roles typically available in a university setting that would help them.\n\n  User's Goal:\n  {{{prompt}}}\n  `,\n});\n\nconst generateSuggestionsFlow = ai.defineFlow(\n  {\n    name: 'generateSuggestionsFlow',\n    inputSchema: GenerateSuggestionsInputSchema,\n    outputSchema: GenerateSuggestionsOutputSchema,\n  },\n  async (input) => {\n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAGA,MAAM,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAEA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,aAAa,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,kBAAkB,QAAQ,CAAC;AAClD;AAGO,eAAe,+BACpB,KAA+B;IAE/B,OAAO,wBAAwB;AACjC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAE,QAAQ;IAA+B;IAChD,QAAQ;QAAE,QAAQ;IAAgC;IAClD,QAAQ,CAAC;;;;;;EAMT,CAAC;AACH;AAEA,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC3C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAChC,OAAO;AACT;;;IA5BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vision-board/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { generateVisionBoardSuggestions } from '@/ai/flows/vision-board-suggestion-generator';\n\nexport async function getVisionBoardSuggestionsAction(prompt: string) {\n  if (!process.env.GEMINI_API_KEY) {\n    return {\n      error: 'The AI Twin is currently offline. An API key is required.',\n      suggestions: null,\n    };\n  }\n  \n  try {\n    const result = await generateVisionBoardSuggestions({ prompt });\n    return {\n      suggestions: result.suggestions,\n      error: null,\n    };\n  } catch (error) {\n    console.error('Error getting suggestions:', error);\n    return {\n      error: 'An unexpected error occurred while fetching suggestions.',\n      suggestions: null,\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAEO,eAAe,gCAAgC,MAAc;IAClE,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;QAC/B,OAAO;YACL,OAAO;YACP,aAAa;QACf;IACF;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,gKAAA,CAAA,iCAA8B,AAAD,EAAE;YAAE;QAAO;QAC7D,OAAO;YACL,aAAa,OAAO,WAAW;YAC/B,OAAO;QACT;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;YACL,OAAO;YACP,aAAa;QACf;IACF;AACF;;;IArBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/vision-board/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getVisionBoardSuggestionsAction as '4025321ba4a4d3a4a773354924f443264f175114d2'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vision-board/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/vision-board/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/vision-board/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vision-board/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/vision-board/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/vision-board/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}