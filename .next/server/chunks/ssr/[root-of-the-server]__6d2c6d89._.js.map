{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/ai-twin.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview A Genkit flow for the AI Twin feature.\n *\n * - generateAiTwinMessage - A function that generates a personalized message for the student.\n * - AiTwinInput - The input type for the generateAiTwinMessage function.\n * - AiTwinOutput - The return type for the generateAiTwinMessage function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst MessageSchema = z.object({\n  role: z.enum(['user', 'model']),\n  content: z.string(),\n});\n\nconst AiTwinInputSchema = z.object({\n  studentName: z.string().describe(\"The student's name.\"),\n  achievements: z\n    .string()\n    .describe(\"A list of the student's verified achievements.\"),\n  gpa: z.number().describe(\"The student's current GPA.\"),\n  degreeProgress: z.number().describe(\"The student's degree completion percentage.\"),\n  history: z.array(MessageSchema).describe('The conversation history.'),\n});\nexport type AiTwinInput = z.infer<typeof AiTwinInputSchema>;\n\nconst AiTwinOutputSchema = z.object({\n  message: z.string().describe(\"The AI Twin's personalized, encouraging, and insightful message to the student. It should be 2-3 sentences long.\"),\n});\nexport type AiTwinOutput = z.infer<typeof AiTwinOutputSchema>;\n\nexport async function generateAiTwinMessage(\n  input: AiTwinInput\n): Promise<AiTwinOutput> {\n  return aiTwinFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'aiTwinPrompt',\n  input: {schema: AiTwinInputSchema},\n  output: {schema: AiTwinOutputSchema},\n  prompt: `You are an AI Twin for a university student named {{{studentName}}}. Your purpose is to provide short, personalized, and encouraging insight based on their current progress. Be positive and forward-looking. You engage in a natural, supportive, and encouraging conversation. Ask clarifying questions to better understand the student's aspirations.\n\nYour first message should be a friendly greeting.\n\nHere is the student's current status:\n- Achievements:\n{{{achievements}}}\n- Current GPA: {{{gpa}}}\n- Degree Progress: {{{degreeProgress}}}%\n\nConversation History:\n{{#each history}}\n{{#if content}}\n{{role}}: {{content}}\n{{/if}}\n{{/each}}\nmodel:\n`,\n});\n\nconst aiTwinFlow = ai.defineFlow(\n  {\n    name: 'aiTwinFlow',\n    inputSchema: AiTwinInputSchema,\n    outputSchema: AiTwinOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7B,MAAM,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEA,MAAM,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CAAC;IACZ,KAAK,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACzB,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,SAAS,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,eAAe,QAAQ,CAAC;AAC3C;AAGA,MAAM,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGO,eAAe,sBACpB,KAAkB;IAElB,OAAO,WAAW;AACpB;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAiB;IACjC,QAAQ;QAAC,QAAQ;IAAkB;IACnC,QAAQ,CAAC;;;;;;;;;;;;;;;;;AAiBX,CAAC;AACD;AAEA,MAAM,aAAa,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9B;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAvCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/text-to-speech.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A Genkit flow for converting text to speech.\n *\n * - textToSpeech - A function that converts a string of text to audio.\n */\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { googleAI } from '@genkit-ai/googleai';\nimport wav from 'wav';\n\nasync function toWav(\n  pcmData: Buffer,\n  channels = 1,\n  rate = 24000,\n  sampleWidth = 2\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const writer = new wav.Writer({\n      channels,\n      sampleRate: rate,\n      bitDepth: sampleWidth * 8,\n    });\n\n    const bufs: any[] = [];\n    writer.on('error', reject);\n    writer.on('data', function (d) {\n      bufs.push(d);\n    });\n    writer.on('end', function () {\n      resolve(Buffer.concat(bufs).toString('base64'));\n    });\n\n    writer.write(pcmData);\n    writer.end();\n  });\n}\n\nconst TextToSpeechOutputSchema = z.object({\n  audio: z.string().describe('The base64 encoded WAV audio file.'),\n});\n\nexport const textToSpeechFlow = ai.defineFlow(\n  {\n    name: 'textToSpeechFlow',\n    inputSchema: z.string(),\n    outputSchema: TextToSpeechOutputSchema,\n  },\n  async (text) => {\n    const { media } = await ai.generate({\n      model: googleAI.model('gemini-2.5-flash-preview-tts'),\n      config: {\n        responseModalities: ['AUDIO'],\n        speechConfig: {\n          voiceConfig: {\n            prebuiltVoiceConfig: { voiceName: 'Algenib' },\n          },\n        },\n      },\n      prompt: text,\n    });\n    if (!media) {\n      throw new Error('no media returned');\n    }\n    const audioBuffer = Buffer.from(\n      media.url.substring(media.url.indexOf(',') + 1),\n      'base64'\n    );\n    const wavAudio = await toWav(audioBuffer);\n    return {\n      audio: 'data:audio/wav;base64,' + wavAudio,\n    };\n  }\n);\n\nexport async function textToSpeech(text: string) {\n  return textToSpeechFlow(text);\n}\n"],"names":[],"mappings":";;;;;;AACA;;;;CAIC,GACD;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;AAEA,eAAe,MACb,OAAe,EACf,WAAW,CAAC,EACZ,OAAO,KAAK,EACZ,cAAc,CAAC;IAEf,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,MAAM,SAAS,IAAI,4HAAA,CAAA,UAAG,CAAC,MAAM,CAAC;YAC5B;YACA,YAAY;YACZ,UAAU,cAAc;QAC1B;QAEA,MAAM,OAAc,EAAE;QACtB,OAAO,EAAE,CAAC,SAAS;QACnB,OAAO,EAAE,CAAC,QAAQ,SAAU,CAAC;YAC3B,KAAK,IAAI,CAAC;QACZ;QACA,OAAO,EAAE,CAAC,OAAO;YACf,QAAQ,OAAO,MAAM,CAAC,MAAM,QAAQ,CAAC;QACvC;QAEA,OAAO,KAAK,CAAC;QACb,OAAO,GAAG;IACZ;AACF;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC7B;AAEO,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC3C;IACE,MAAM;IACN,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM;IACrB,cAAc;AAChB,GACA,OAAO;IACL,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;QAClC,OAAO,2KAAA,CAAA,WAAQ,CAAC,KAAK,CAAC;QACtB,QAAQ;YACN,oBAAoB;gBAAC;aAAQ;YAC7B,cAAc;gBACZ,aAAa;oBACX,qBAAqB;wBAAE,WAAW;oBAAU;gBAC9C;YACF;QACF;QACA,QAAQ;IACV;IACA,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,cAAc,OAAO,IAAI,CAC7B,MAAM,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,IAC7C;IAEF,MAAM,WAAW,MAAM,MAAM;IAC7B,OAAO;QACL,OAAO,2BAA2B;IACpC;AACF;AAGK,eAAe,aAAa,IAAY;IAC7C,OAAO,iBAAiB;AAC1B;;;IAnCa;IAiCS;;AAjCT,+OAAA;AAiCS,+OAAA","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/placeholder-images.ts"],"sourcesContent":["import data from './placeholder-images.json';\n\nexport type ImagePlaceholder = {\n  id: string;\n  description: string;\n  imageUrl: string;\n  imageHint: string;\n};\n\nexport const PlaceHolderImages: ImagePlaceholder[] = data.placeholderImages;\n"],"names":[],"mappings":";;;AAAA;;AASO,MAAM,oBAAwC,2GAAA,CAAA,UAAI,CAAC,iBAAiB","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["\nimport { Student, AcademicRecord, Activity, ActivityCategory, GithubStats, GithubProject, Job } from './types';\nimport { PlaceHolderImages } from './placeholder-images';\n\nconst studentAvatar = PlaceHolderImages.find(img => img.id === 'student-avatar')?.imageUrl || 'https://picsum.photos/seed/student-avatar/100/100';\nconst facultyAvatar = PlaceHolderImages.find(img => img.id === 'faculty-avatar')?.imageUrl || 'https://picsum.photos/seed/faculty-avatar/100/100';\n\nexport const allSkills = [\n  'JavaScript', 'React', 'Node.js', 'Python', 'Data Analysis', \n  'Project Management', 'Public Speaking', 'Team Leadership',\n  'TypeScript', 'Java', 'C++', 'AWS', 'Red Hat', 'Linux', 'Marketing', 'UI/UX Design', 'CEH'\n];\n\nexport const activityCategories: ActivityCategory[] = [\n    'Conference',\n    'Workshop',\n    'Certification',\n    'Club Activity',\n    'Competition',\n    'Internship',\n    'Community Service',\n    'Other',\n];\n\nexport const allMajors = [\n    'Computer Science', 'Data Science', 'Electrical Engineering', 'Business Administration', \n    'Mechanical Engineering', 'Marketing', 'Physics', 'Biology'\n];\n\nconst firstNames = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\", \"Frank\", \"Grace\", \"Heidi\", \"Ivan\", \"Judy\", \"Mallory\", \"Niaj\", \"Olivia\", \"Peggy\", \"Quentin\", \"Rupert\", \"Sybil\", \"Trent\", \"Ulysses\", \"Victor\", \"Walter\", \"Xavier\", \"Yvonne\", \"Zelda\"];\nconst lastNames = [\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Garcia\", \"Miller\", \"Davis\", \"Rodriguez\", \"Martinez\", \"Hernandez\", \"Lopez\", \"Gonzalez\", \"Wilson\", \"Anderson\", \"Thomas\", \"Taylor\", \"Moore\", \"Jackson\", \"Martin\"];\n\n\nconst skillsByMajor: { [key: string]: string[] } = {\n    'Computer Science': ['TypeScript', 'React', 'Node.js', 'AWS', 'Java', 'Python', 'Linux'],\n    'Data Science': ['Python', 'Data Analysis', 'AWS', 'React', 'Machine Learning', 'SQL'],\n    'Electrical Engineering': ['C++', 'Java', 'Linux', 'Circuit Design', 'VHDL'],\n    'Business Administration': ['Project Management', 'Public Speaking', 'Marketing', 'Finance'],\n    'Mechanical Engineering': ['CAD', 'Thermodynamics', 'Project Management', 'Matlab'],\n    'Marketing': ['Marketing', 'Public Speaking', 'UI/UX Design', 'Social Media'],\n    'Physics': ['Python', 'Data Analysis', 'Matlab', 'Quantum Mechanics'],\n    'Biology': ['Data Analysis', 'Genetics', 'Lab Techniques', 'Python']\n};\n\nconst createMockData = () => {\n  const generatedUsers: Student[] = [];\n  let studentIdCounter = 10;\n\n  for (const major of allMajors) {\n    for (let i = 0; i < 20; i++) {\n      const firstName = firstNames[(studentIdCounter + i) % firstNames.length];\n      const lastName = lastNames[(studentIdCounter + i) % lastNames.length];\n      const name = `${firstName} ${lastName}`;\n      const id = `STU-${String(studentIdCounter).padStart(3, '0')}`;\n      \n      if(id === 'STU-001') continue;\n\n      const email = `${firstName.toLowerCase()}.${lastName.toLowerCase()}${i}@example.com`;\n      const avatarIndex = (studentIdCounter % 20);\n      const avatarId = `student-avatar-${avatarIndex + 1}`;\n      const avatarUrl = PlaceHolderImages.find(img => img.id === avatarId)?.imageUrl;\n      const studentSkills = skillsByMajor[major] || [];\n      const numSkills = (((studentIdCounter + i) % 3) + 2); // 2 to 4 skills\n      \n      const shuffledSkills = [...studentSkills]\n          .sort((a, b) => (a+b).charCodeAt(0) % 2 - 0.5) // Deterministic shuffle\n          .slice(0, numSkills);\n\n      generatedUsers.push({\n        id,\n        name,\n        email,\n        avatarUrl: avatarUrl || `https://picsum.photos/seed/${id}/100/100`,\n        major,\n        year: ((i % 4) + 1),\n        role: 'student',\n        skills: shuffledSkills,\n        skillRank: i + 1,\n      });\n      studentIdCounter++;\n    }\n  }\n\n  const generatedActivities: Activity[] = [];\n  generatedUsers.forEach((user, userIdx) => {\n    const numActivities = (userIdx % 5) + 1; // 1 to 5 activities\n    for (let i = 0; i < numActivities; i++) {\n      const category = activityCategories[(userIdx + i) % activityCategories.length];\n      generatedActivities.push({\n        id: `ACT-${user.id}-${i}`,\n        studentId: user.id,\n        studentName: user.name,\n        title: `${category} by ${user.name}`,\n        category: category,\n        date: new Date(2023, ((userIdx + i) % 12), ((userIdx + i) % 28) + 1),\n        description: `Generated activity for ${user.name} in ${category}.`,\n        status: 'Approved',\n        credits: ((userIdx + i) % 5) + 1, // 1 to 5 credits\n      });\n    }\n  });\n\n  return { generatedUsers, generatedActivities };\n}\n\n// Memoize the generated data\nconst getGeneratedData = (() => {\n  let cache: { generatedUsers: Student[], generatedActivities: Activity[] } | null = null;\n  return () => {\n    if (cache === null) {\n      cache = createMockData();\n    }\n    return cache;\n  };\n})();\n\nconst { generatedUsers, generatedActivities } = getGeneratedData();\n\n\nexport const users: Student[] = [\n  {\n    id: 'STU-001',\n    name: 'Tahzeeb',\n    email: 'student@gmail.com',\n    avatarUrl: studentAvatar,\n    major: 'Computer Science',\n    year: 3,\n    role: 'student',\n    githubUsername: 'Tahzeeb-sh0',\n    skills: ['TypeScript', 'React', 'Node.js', 'Project Management', 'AWS'],\n    skillRank: 1,\n  },\n  {\n    id: 'FAC-001',\n    name: 'Shweta',\n    email: 'faculty@gmail.com',\n    avatarUrl: facultyAvatar,\n    major: 'Computer Science',\n    year: 0, \n    role: 'faculty',\n  },\n   {\n    id: 'STU-002',\n    name: 'Jane Smith',\n    email: 'jane.smith@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-2')?.imageUrl,\n    major: 'Data Science',\n    year: 4,\n    role: 'student',\n    githubUsername: 'janesmith',\n    skills: ['Python', 'Data Analysis', 'React', 'Red Hat', 'Linux'],\n    skillRank: 1, // Rank 1 in Data Science\n  },\n  {\n    id: 'STU-003',\n    name: 'Sam Wilson',\n    email: 'sam.wilson@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-3')?.imageUrl,\n    major: 'Electrical Engineering',\n    year: 2,\n    role: 'student',\n    skills: ['C++', 'Java', 'AWS', 'Linux'],\n    skillRank: 1, // Rank 1 in EE\n  },\n   {\n    id: 'STU-004',\n    name: 'Emily Davis',\n    email: 'emily.davis@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-4')?.imageUrl,\n    major: 'Business Administration',\n    year: 3,\n    role: 'student',\n    skills: ['Marketing', 'Project Management', 'Public Speaking'],\n    skillRank: 1,\n  },\n  {\n    id: 'STU-005',\n    name: 'Michael Brown',\n    email: 'michael.brown@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-5')?.imageUrl,\n    major: 'Mechanical Engineering',\n    year: 4,\n    role: 'student',\n    skills: ['Project Management', 'Team Leadership'],\n    skillRank: 1,\n  },\n  {\n    id: 'STU-006',\n    name: 'Jessica Garcia',\n    email: 'jessica.garcia@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-6')?.imageUrl,\n    major: 'Marketing',\n    year: 2,\n    role: 'student',\n    githubUsername: 'jessgarcia',\n    skills: ['Marketing', 'Public Speaking', 'UI/UX Design'],\n    skillRank: 1,\n  },\n  {\n    id: 'STU-007',\n    name: 'David Lee',\n    email: 'david.lee@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-7')?.imageUrl,\n    major: 'Physics',\n    year: 3,\n    role: 'student',\n    skills: ['Python', 'Data Analysis'],\n    skillRank: 1,\n  },\n  {\n    id: 'STU-008',\n    name: 'Sarah Martinez',\n    email: 'sarah.martinez@example.com',\n    avatarUrl: PlaceHolderImages.find(img => img.id === 'student-avatar-8')?.imageUrl,\n    major: 'Biology',\n    year: 4,\n    role: 'student',\n    skills: ['Team Leadership'],\n    skillRank: 1,\n  },\n  ...generatedUsers.filter(u => u.id !== 'STU-001'),\n];\n\nexport const student = users[0]; // Default to Tahzeeb for existing components that rely on a single student\nexport const facultyUser = users.find(u => u.role === 'faculty') as Student;\n\nexport const academicRecord: AcademicRecord = {\n  gpa: 3.8,\n  attendance: 95,\n  totalCredits: 120,\n  creditsEarned: 85,\n};\n\nexport const githubStats: GithubStats = {\n  repositories: 25,\n  commits: 531,\n  pullRequests: 42,\n  gists: 5,\n};\n\nexport const githubProjects: GithubProject[] = [\n  {\n    id: 'PROJ-001',\n    name: 'stuverse-app',\n    description: 'The very application you are using! A Next.js app for tracking student achievements.',\n    url: 'https://github.com/Tahzeeb-sh0/stuverse-app',\n    stars: 150,\n    forks: 30,\n    language: 'TypeScript',\n  },\n  {\n    id: 'PROJ-002',\n    name: 'portfolio-generator',\n    description: 'A tool to generate a personal portfolio website from a JSON file, built with React.',\n    url: 'https://github.com/Tahzeeb-sh0/portfolio-generator',\n    stars: 75,\n    forks: 12,\n    language: 'JavaScript',\n  },\n  {\n    id: 'PROJ-003',\n    name: 'genkit-flow-visualizer',\n    description: 'A developer tool to visualize and debug Genkit flows in real-time.',\n    url: 'https://github.com/Tahzeeb-sh0/genkit-flow-visualizer',\n    stars: 200,\n    forks: 45,\n    language: 'TypeScript',\n  },\n];\n\n\nexport const activities: Activity[] = [\n  {\n    id: 'ACT-001',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Web Development Workshop',\n    category: 'Workshop',\n    date: new Date('2023-10-15'),\n    description: 'A week-long workshop on modern web development technologies.',\n    status: 'Approved',\n    credits: 2,\n  },\n  {\n    id: 'ACT-002',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'AI in Healthcare Conference',\n    category: 'Conference',\n    date: new Date('2023-11-05'),\n    description: 'Attended the annual conference on Artificial Intelligence applications in the healthcare sector.',\n    status: 'Approved',\n    credits: 1,\n  },\n  {\n    id: 'ACT-003',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Summer Internship at TechCorp',\n    category: 'Internship',\n    date: new Date('2023-08-30'),\n    description: 'Completed a 3-month summer internship as a software engineering intern.',\n    status: 'Approved',\n    credits: 5,\n  },\n  {\n    id: 'ACT-004',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Hackathon 2023',\n    category: 'Competition',\n    date: new Date('2023-09-20'),\n    description: 'Participated in the university-level hackathon and won 2nd place.',\n    status: 'Approved',\n    credits: 3,\n  },\n  {\n    id: 'ACT-005',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Google Cloud Certified',\n    category: 'Certification',\n    date: new Date('2024-01-10'),\n    description: 'Earned the Associate Cloud Engineer certification from Google Cloud.',\n    status: 'Approved',\n    credits: 4,\n  },\n  {\n    id: 'ACT-006',\n    studentId: 'STU-002',\n    studentName: 'Jane Smith',\n    title: 'Data Science Bootcamp',\n    category: 'Workshop',\n    date: new Date('2024-02-01'),\n    description: 'Intensive bootcamp on data analysis and machine learning.',\n    status: 'Approved',\n    credits: 3,\n  },\n    {\n    id: 'ACT-007',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Leadership Role in Coding Club',\n    category: 'Club Activity',\n    date: new Date('2023-05-20'),\n    description: 'Served as the president of the university coding club for the academic year 2022-2023.',\n    status: 'Approved',\n    credits: 3,\n  },\n  {\n    id: 'ACT-008',\n    studentId: 'STU-003',\n    studentName: 'Sam Wilson',\n    title: 'Community Tree Planting',\n    category: 'Community Service',\n    date: new Date('2023-04-22'),\n    description: 'Volunteered for a local environmental group to plant 100 trees.',\n    status: 'Approved',\n    credits: 1,\n  },\n  {\n    id: 'ACT-009',\n    studentId: 'STU-002',\n    studentName: 'Jane Smith',\n    title: 'National Design Competition',\n    category: 'Competition',\n    date: new Date('2024-03-15'),\n    description: 'Won first place in the national product design competition.',\n    status: 'Approved',\n    credits: 5,\n  },\n  {\n    id: 'ACT-010',\n    studentId: 'STU-003',\n    studentName: 'Sam Wilson',\n    title: 'Robotics Club Project Lead',\n    category: 'Club Activity',\n    date: new Date('2024-04-05'),\n    description: 'Led a team to build an autonomous rover for a university showcase.',\n    status: 'Approved',\n    credits: 3,\n  },\n   {\n    id: 'ACT-011',\n    studentId: 'STU-004',\n    studentName: 'Emily Davis',\n    title: 'Marketing Internship at Adify',\n    category: 'Internship',\n    date: new Date('2023-12-15'),\n    description: 'Managed social media campaigns and analyzed market trends for a startup.',\n    status: 'Approved',\n    credits: 5,\n  },\n  {\n    id: 'ACT-012',\n    studentId: 'STU-002',\n    studentName: 'Jane Smith',\n    title: 'Published Research Paper',\n    category: 'Other',\n    date: new Date('2024-05-01'),\n    description: 'Co-authored a paper on machine learning models for financial forecasting.',\n    status: 'Approved',\n    credits: 6,\n  },\n   {\n    id: 'ACT-013',\n    studentId: 'STU-004',\n    studentName: 'Emily Davis',\n    title: 'Business Case Competition',\n    category: 'Competition',\n    date: new Date('2024-02-20'),\n    description: 'Finalist in the inter-university business case competition.',\n    status: 'Pending',\n    credits: 3,\n  },\n  {\n    id: 'ACT-014',\n    studentId: 'STU-002',\n    studentName: 'Jane Smith',\n    title: 'Red Hat Certified System Administrator (RHCSA)',\n    category: 'Certification',\n    date: new Date('2024-03-20'),\n    description: 'Earned the RHCSA certification, demonstrating core system administration skills for Red Hat Enterprise Linux environments.',\n    status: 'Approved',\n    credits: 4,\n  },\n  {\n    id: 'ACT-015',\n    studentId: 'STU-003',\n    studentName: 'Sam Wilson',\n    title: 'AWS Certified Solutions Architect - Associate',\n    category: 'Certification',\n    date: new Date('2024-04-10'),\n    description: 'Validated technical expertise in designing and deploying scalable, highly available, and fault-tolerant systems on AWS.',\n    status: 'Approved',\n    credits: 5,\n  },\n  {\n    id: 'ACT-016',\n    studentId: 'STU-005',\n    studentName: 'Michael Brown',\n    title: 'ASME Design Competition',\n    category: 'Competition',\n    date: new Date('2023-11-20'),\n    description: 'Team lead for a project that won \"Most Innovative Design\" award.',\n    status: 'Approved',\n    credits: 4,\n  },\n  {\n    id: 'ACT-017',\n    studentId: 'STU-006',\n    studentName: 'Jessica Garcia',\n    title: 'DECA Chapter President',\n    category: 'Club Activity',\n    date: new Date('2024-01-15'),\n    description: 'Led the university DECA chapter, organizing events and competitions.',\n    status: 'Approved',\n    credits: 3,\n  },\n  {\n    id: 'ACT-018',\n    studentId: 'STU-007',\n    studentName: 'David Lee',\n    title: 'Undergraduate Research Symposium',\n    category: 'Conference',\n    date: new Date('2024-04-25'),\n    description: 'Presented research on quantum state simulations.',\n    status: 'Approved',\n    credits: 3,\n  },\n  {\n    id: 'ACT-019',\n    studentId: 'STU-008',\n    studentName: 'Sarah Martinez',\n    title: 'Volunteering at Local Hospital',\n    category: 'Community Service',\n    date: new Date('2023-12-01'),\n    description: 'Completed 100+ hours of volunteer work in the pediatric ward.',\n    status: 'Approved',\n    credits: 2,\n  },\n  {\n    id: 'ACT-020',\n    studentId: 'STU-005',\n    studentName: 'Michael Brown',\n    title: 'Internship at General Motors',\n    category: 'Internship',\n    date: new Date('2024-05-10'),\n    description: 'Six-month co-op focused on electric vehicle battery design.',\n    status: 'Pending',\n    credits: 6,\n  },\n  {\n    id: 'ACT-021',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Campus Cleanup Drive',\n    category: 'Community Service',\n    date: new Date('2023-10-22'),\n    description: 'Organized and participated in a campus-wide cleanup event.',\n    status: 'Approved',\n    credits: 1,\n  },\n  {\n    id: 'ACT-022',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Peer Tutoring for Intro to CS',\n    category: 'Other',\n    date: new Date('2023-11-15'),\n    description: 'Volunteered as a peer tutor for first-year computer science students.',\n    status: 'Approved',\n    credits: 2,\n  },\n  {\n    id: 'ACT-023',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Agile Project Management Certificate',\n    category: 'Certification',\n    date: new Date('2024-02-18'),\n    description: 'Completed an online certification course on Agile and Scrum methodologies.',\n    status: 'Approved',\n    credits: 3,\n  },\n   {\n    id: 'ACT-025',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Certified Ethical Hacker (CEH)',\n    category: 'Certification',\n    date: new Date('2024-03-25'),\n    description: 'Earned the CEH certification, demonstrating knowledge of ethical hacking and network security.',\n    status: 'Approved',\n    credits: 5,\n  },\n  {\n    id: 'ACT-024',\n    studentId: 'STU-010',\n    name: 'Judy Williams',\n    title: 'Advanced Python Workshop',\n    category: 'Workshop',\n    date: new Date('2024-04-18'),\n    description: 'Completed an advanced workshop on Python for data science.',\n    status: 'Approved',\n    credits: 2,\n  },\n  ...generatedActivities,\n];\n\nconst jobLogo1 = PlaceHolderImages.find(p => p.id === 'job-logo-1')?.imageUrl;\nconst jobLogo2 = PlaceHolderImages.find(p => p.id === 'job-logo-2')?.imageUrl;\nconst jobLogo3 = PlaceHolderImages.find(p => p.id === 'job-logo-3')?.imageUrl;\nconst jobLogo4 = PlaceHolderImages.find(p => p.id === 'job-logo-4')?.imageUrl;\nconst jobLogo5 = PlaceHolderImages.find(p => p.id === 'job-logo-5')?.imageUrl;\n\nexport const jobs: Job[] = [\n    {\n        id: 'JOB-001',\n        title: 'Frontend Developer Intern',\n        company: 'Innovate Inc.',\n        companyLogoUrl: jobLogo1,\n        location: 'Remote',\n        type: 'Internship',\n        tags: ['React', 'TypeScript', 'CSS'],\n        description: 'Join our dynamic team to build and improve our user-facing features. This is a great opportunity for students passionate about UI/UX and modern web technologies.',\n        responsibilities: [\n            'Develop new user-facing features using React.js and TypeScript.',\n            'Build reusable components and front-end libraries for future use.',\n            'Translate designs and wireframes into high-quality code.',\n            'Optimize components for maximum performance across a vast array of web-capable devices and browsers.',\n        ],\n        datePosted: new Date('2024-05-20'),\n    },\n    {\n        id: 'JOB-002',\n        title: 'Software Engineer (New Grad)',\n        company: 'Tech Solutions LLC',\n        companyLogoUrl: jobLogo2,\n        location: 'New York, NY',\n        type: 'Full-time',\n        tags: ['Java', 'Python', 'AWS'],\n        description: 'We are seeking talented and motivated recent graduates to join our backend engineering team. You will work on scalable, cloud-based services that power our core products.',\n        responsibilities: [\n            'Design, develop, test, deploy, maintain and improve software.',\n            'Manage individual project priorities, deadlines and deliverables.',\n            'Contribute to a culture of high-quality, professional software engineering.',\n        ],\n        datePosted: new Date('2024-05-18'),\n    },\n    {\n        id: 'JOB-003',\n        title: 'Data Science Intern',\n        company: 'Data Insights Co.',\n        companyLogoUrl: jobLogo3,\n        location: 'San Francisco, CA',\n        type: 'Internship',\n        tags: ['Python', 'SQL', 'Machine Learning'],\n        description: 'As a Data Science Intern, you will have the opportunity to analyze large datasets, extract meaningful insights, and contribute to our predictive modeling projects.',\n        responsibilities: [\n            'Work with large, complex data sets to solve business problems.',\n            'Develop and deploy machine learning models.',\n            'Create data visualizations to communicate findings to stakeholders.',\n        ],\n        datePosted: new Date('2024-05-15'),\n    },\n    {\n        id: 'JOB-004',\n        title: 'Cloud Engineer',\n        company: 'Cloudways',\n        companyLogoUrl: jobLogo4,\n        location: 'Austin, TX',\n        type: 'Full-time',\n        tags: ['AWS', 'Linux', 'Node.js'],\n        description: 'We are looking for a Cloud Engineer to help manage and scale our cloud infrastructure. Experience with containerization technologies like Docker and Kubernetes is a plus.',\n        responsibilities: [\n            'Deploy, manage, and operate scalable, highly available, and fault-tolerant systems on AWS.',\n            'Implement and control the flow of data to and from AWS.',\n            'Select the appropriate AWS service based on compute, data, or security requirements.',\n        ],\n        datePosted: new Date('2024-05-12'),\n    },\n     {\n        id: 'JOB-005',\n        title: 'UI/UX Design Intern',\n        company: 'Creative Minds',\n        companyLogoUrl: jobLogo5,\n        location: 'Remote',\n        type: 'Internship',\n        tags: ['Figma', 'UI/UX Design', 'User Research'],\n        description: 'Work alongside our talented design team to create intuitive and engaging user experiences. You will be involved in all stages of the design process, from research to high-fidelity mockups.',\n        responsibilities: [\n            'Create wireframes, storyboards, user flows, and site maps.',\n            'Conduct user research and evaluate user feedback.',\n            'Design and deliver high-fidelity mockups and prototypes for our mobile app.',\n        ],\n        datePosted: new Date('2024-05-10'),\n    },\n     {\n        id: 'JOB-006',\n        title: 'Marketing Associate',\n        company: 'Growth Gurus',\n        companyLogoUrl: jobLogo1,\n        location: 'Boston, MA',\n        type: 'Full-time',\n        tags: ['Marketing', 'Social Media', 'SEO'],\n        description: 'As a Marketing Associate, you will develop and execute innovative marketing campaigns across multiple channels to drive user acquisition and engagement.',\n        responsibilities: [\n            'Manage and grow our social media presence.',\n            'Develop content for blogs, newsletters, and other marketing materials.',\n            'Analyze campaign performance and optimize for conversions.',\n        ],\n        datePosted: new Date('2024-05-08'),\n    },\n    {\n        id: 'JOB-007',\n        title: 'Backend Engineer',\n        company: 'DataStream Solutions',\n        companyLogoUrl: jobLogo2,\n        location: 'Chicago, IL',\n        type: 'Full-time',\n        tags: ['Node.js', 'PostgreSQL', 'GraphQL'],\n        description: 'We are looking for a backend engineer to build and maintain the APIs that power our data platform. You will work with a modern stack and have a significant impact on our product.',\n        responsibilities: [\n            'Design and implement RESTful and GraphQL APIs.',\n            'Write clean, maintainable, and well-tested code.',\n            'Collaborate with front-end developers to integrate user-facing elements.',\n            'Manage and optimize database performance.',\n        ],\n        datePosted: new Date('2024-05-22'),\n    },\n    {\n        id: 'JOB-008',\n        title: 'DevOps Engineer Intern',\n        company: 'ScaleGrid',\n        companyLogoUrl: jobLogo3,\n        location: 'Remote',\n        type: 'Internship',\n        tags: ['Docker', 'Kubernetes', 'CI/CD', 'Terraform'],\n        description: 'Join our infrastructure team to learn and implement DevOps best practices. This internship will provide hands-on experience with automation, containerization, and cloud infrastructure.',\n        responsibilities: [\n            'Assist in managing and improving our CI/CD pipeline.',\n            'Work with Docker and Kubernetes to containerize and orchestrate applications.',\n            'Use infrastructure-as-code tools like Terraform to manage cloud resources.',\n            'Monitor system performance and troubleshoot issues.',\n        ],\n        datePosted: new Date('2024-05-21'),\n    },\n    {\n        id: 'JOB-009',\n        title: 'Product Manager (Associate)',\n        company: 'Agile Innovations',\n        companyLogoUrl: jobLogo4,\n        location: 'Seattle, WA',\n        type: 'Full-time',\n        tags: ['Product Management', 'Agile', 'JIRA'],\n        description: 'We are seeking a junior Product Manager to help define and execute the product roadmap for our flagship product. You will work closely with engineering, design, and marketing teams.',\n        responsibilities: [\n            'Gather and prioritize product and customer requirements.',\n            'Define the product vision and strategy.',\n            'Work with cross-functional teams to deliver new features and products.',\n            'Analyze market data and user feedback to inform product decisions.',\n        ],\n        datePosted: new Date('2024-05-19'),\n    },\n    {\n        id: 'JOB-010',\n        title: 'Full Stack Developer',\n        company: 'NexGen Solutions',\n        companyLogoUrl: jobLogo5,\n        location: 'Remote',\n        type: 'Part-time',\n        tags: ['React', 'Node.js', 'TypeScript', 'MongoDB'],\n        description: 'We are looking for a versatile Full Stack Developer to join our team on a part-time basis. You will be responsible for developing both front-end and back-end components of our web applications.',\n        responsibilities: [\n            'Develop and maintain web applications using the MERN stack.',\n            'Write clean, reusable, and efficient code.',\n            'Participate in code reviews and contribute to a collaborative development environment.',\n            'Troubleshoot and debug applications.',\n        ],\n        datePosted: new Date('2024-05-17'),\n    }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1350, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/ai-twin/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { generateAiTwinMessage, AiTwinInput } from \"@/ai/flows/ai-twin\";\nimport { textToSpeech } from \"@/ai/flows/text-to-speech\";\nimport { activities, student, academicRecord } from \"@/lib/mock-data\";\nimport { format } from \"date-fns\";\n\nconst approvedActivities = activities\n    .filter(act => act.status === 'Approved' && act.studentId === student.id)\n    .map(act => `- ${act.title}: ${act.description} (Completed: ${format(act.date, 'PPP')})`)\n    .join('\\n');\n\n\nexport async function askAiTwinAction(history: AiTwinInput['history']) {\n  if (!process.env.GEMINI_API_KEY) {\n    return {\n      message: \"Hi! Your AI Twin is currently offline. Please add your Gemini API key to the .env file to enable this feature.\",\n      error: \"API key not configured.\",\n    };\n  }\n\n  try {\n    const result = await generateAiTwinMessage({\n        achievements: approvedActivities,\n        studentName: student.name,\n        gpa: academicRecord.gpa,\n        degreeProgress: (academicRecord.creditsEarned / academicRecord.totalCredits) * 100,\n        history,\n    });\n\n    return {\n      message: result.message,\n      error: null,\n    };\n  } catch (error) {\n    console.error(\"Error asking AI Twin:\", error);\n    return {\n      message: null,\n      error: \"I'm having a little trouble gathering my thoughts right now. Please check back in a bit!\",\n    };\n  }\n}\n\nexport async function getAiTwinAudioAction(text: string) {\n    try {\n        const result = await textToSpeech(text);\n        return {\n            audio: result.audio,\n            error: null,\n        };\n    } catch(e) {\n        console.error(\"Error generating audio:\", e);\n        return {\n            audio: null,\n            error: \"Failed to generate audio for the message.\"\n        }\n    }\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,qBAAqB,0HAAA,CAAA,aAAU,CAChC,MAAM,CAAC,CAAA,MAAO,IAAI,MAAM,KAAK,cAAc,IAAI,SAAS,KAAK,0HAAA,CAAA,UAAO,CAAC,EAAE,EACvE,GAAG,CAAC,CAAA,MAAO,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,IAAI,WAAW,CAAC,aAAa,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,IAAI,EAAE,OAAO,CAAC,CAAC,EACvF,IAAI,CAAC;AAGH,eAAe,gBAAgB,OAA+B;IACnE,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;QAC/B,OAAO;YACL,SAAS;YACT,OAAO;QACT;IACF;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,gIAAA,CAAA,wBAAqB,AAAD,EAAE;YACvC,cAAc;YACd,aAAa,0HAAA,CAAA,UAAO,CAAC,IAAI;YACzB,KAAK,0HAAA,CAAA,iBAAc,CAAC,GAAG;YACvB,gBAAgB,AAAC,0HAAA,CAAA,iBAAc,CAAC,aAAa,GAAG,0HAAA,CAAA,iBAAc,CAAC,YAAY,GAAI;YAC/E;QACJ;QAEA,OAAO;YACL,SAAS,OAAO,OAAO;YACvB,OAAO;QACT;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO;YACL,SAAS;YACT,OAAO;QACT;IACF;AACF;AAEO,eAAe,qBAAqB,IAAY;IACnD,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,0IAAA,CAAA,eAAY,AAAD,EAAE;QAClC,OAAO;YACH,OAAO,OAAO,KAAK;YACnB,OAAO;QACX;IACJ,EAAE,OAAM,GAAG;QACP,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;YACH,OAAO;YACP,OAAO;QACX;IACJ;AACJ;;;IA5CsB;IA8BA;;AA9BA,+OAAA;AA8BA,+OAAA","debugId":null}},
    {"offset": {"line": 1423, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/ai-twin/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {askAiTwinAction as '4023bbf4d303a7fa9d134a6df3c8650c3dc29be0a7'} from 'ACTIONS_MODULE0'\nexport {getAiTwinAudioAction as '4076b38a14a02ef7e781b5d451a6b0f8e3752116ef'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1484, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/ai-twin/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ai-twin/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ai-twin/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 1498, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/ai-twin/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ai-twin/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ai-twin/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,sCACA","debugId":null}},
    {"offset": {"line": 1512, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}