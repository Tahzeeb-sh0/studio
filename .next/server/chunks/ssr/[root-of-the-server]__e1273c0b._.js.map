{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/ai-twin.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A Genkit flow for the AI Twin feature.\n *\n * - generateAiTwinMessage - A function that generates a personalized message for the student.\n * - AiTwinInput - The input type for the generateAiTwinMessage function.\n * - AiTwinOutput - The return type for the generateAiTwinMessage function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AiTwinInputSchema = z.object({\n  studentName: z.string().describe(\"The student's name.\"),\n  achievements: z\n    .string()\n    .describe(\"A list of the student's verified achievements.\"),\n  gpa: z.number().describe(\"The student's current GPA.\"),\n  degreeProgress: z.number().describe(\"The student's degree completion percentage.\"),\n});\nexport type AiTwinInput = z.infer<typeof AiTwinInputSchema>;\n\nconst AiTwinOutputSchema = z.object({\n  message: z.string().describe(\"The AI Twin's personalized, encouraging, and insightful message to the student. It should be 2-3 sentences long.\"),\n});\nexport type AiTwinOutput = z.infer<typeof AiTwinOutputSchema>;\n\nexport async function generateAiTwinMessage(\n  input: AiTwinInput\n): Promise<AiTwinOutput> {\n  return aiTwinFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'aiTwinPrompt',\n  input: {schema: AiTwinInputSchema},\n  output: {schema: AiTwinOutputSchema},\n  prompt: `You are an AI Twin for a university student named {{{studentName}}}. Your purpose is to provide a short, personalized, and encouraging insight based on their current progress. Be positive and forward-looking.\n\nHere is the student's current status:\n- Achievements:\n{{{achievements}}}\n- Current GPA: {{{gpa}}}\n- Degree Progress: {{{degreeProgress}}}%\n\nBased on this, generate a unique 2-3 sentence message. You could highlight a recent success, connect their achievements to their great GPA, or encourage them based on their degree progress. Address the student by name.\n`,\n});\n\nconst aiTwinFlow = ai.defineFlow(\n  {\n    name: 'aiTwinFlow',\n    inputSchema: AiTwinInputSchema,\n    outputSchema: AiTwinOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CAAC;IACZ,KAAK,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACzB,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACtC;AAGA,MAAM,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGO,eAAe,sBACpB,KAAkB;IAElB,OAAO,WAAW;AACpB;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAiB;IACjC,QAAQ;QAAC,QAAQ;IAAkB;IACnC,QAAQ,CAAC;;;;;;;;;AASX,CAAC;AACD;AAEA,MAAM,aAAa,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9B;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA/BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/placeholder-images.ts"],"sourcesContent":["import data from './placeholder-images.json';\n\nexport type ImagePlaceholder = {\n  id: string;\n  description: string;\n  imageUrl: string;\n  imageHint: string;\n};\n\nexport const PlaceHolderImages: ImagePlaceholder[] = data.placeholderImages;\n"],"names":[],"mappings":";;;AAAA;;AASO,MAAM,oBAAwC,2GAAA,CAAA,UAAI,CAAC,iBAAiB","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["import { Student, AcademicRecord, Activity, ActivityCategory, GithubStats } from './types';\nimport { PlaceHolderImages } from './placeholder-images';\n\nconst studentAvatar = PlaceHolderImages.find(img => img.id === 'student-avatar')?.imageUrl || 'https://picsum.photos/seed/student-avatar/100/100';\nconst facultyAvatar = PlaceHolderImages.find(img => img.id === 'faculty-avatar')?.imageUrl || 'https://picsum.photos/seed/faculty-avatar/100/100';\n\n\nexport const users: Student[] = [\n  {\n    id: 'STU-001',\n    name: 'Tahzeeb',\n    email: 'student@gmail.com',\n    avatarUrl: studentAvatar,\n    major: 'Computer Science',\n    year: 3,\n    role: 'student',\n    githubUsername: 'Tahzeeb-sh0',\n  },\n  {\n    id: 'FAC-001',\n    name: 'Shweta',\n    email: 'faculty@gmail.com',\n    avatarUrl: facultyAvatar,\n    major: 'Computer Science',\n    year: 0, \n    role: 'faculty',\n  },\n];\n\nexport const student = users[0]; // Default to Tahzeeb for existing components that rely on a single student\nexport const facultyUser = users[1];\n\nexport const academicRecord: AcademicRecord = {\n  gpa: 3.8,\n  attendance: 95,\n  totalCredits: 120,\n  creditsEarned: 85,\n};\n\nexport const githubStats: GithubStats = {\n  repositories: 25,\n  commits: 531,\n  pullRequests: 42,\n  gists: 5,\n};\n\nexport const activityCategories: ActivityCategory[] = [\n    'Conference',\n    'Workshop',\n    'Certification',\n    'Club Activity',\n    'Competition',\n    'Internship',\n    'Community Service',\n    'Other',\n];\n\nexport const activities: Activity[] = [\n  {\n    id: 'ACT-001',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Web Development Workshop',\n    category: 'Workshop',\n    date: new Date('2023-10-15'),\n    description: 'A week-long workshop on modern web development technologies.',\n    status: 'Approved',\n    credits: 2,\n  },\n  {\n    id: 'ACT-002',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'AI in Healthcare Conference',\n    category: 'Conference',\n    date: new Date('2023-11-05'),\n    description: 'Attended the annual conference on Artificial Intelligence applications in the healthcare sector.',\n    status: 'Approved',\n    credits: 1,\n  },\n  {\n    id: 'ACT-003',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Summer Internship at TechCorp',\n    category: 'Internship',\n    date: new Date('2023-08-30'),\n    description: 'Completed a 3-month summer internship as a software engineering intern.',\n    status: 'Approved',\n    credits: 5,\n  },\n  {\n    id: 'ACT-004',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Hackathon 2023',\n    category: 'Competition',\n    date: new Date('2023-09-20'),\n    description: 'Participated in the university-level hackathon and won 2nd place.',\n    status: 'Approved',\n    credits: 3,\n  },\n  {\n    id: 'ACT-005',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Google Cloud Certified',\n    category: 'Certification',\n    date: new Date('2024-01-10'),\n    description: 'Earned the Associate Cloud Engineer certification from Google Cloud.',\n    status: 'Pending',\n    credits: 4,\n  },\n  {\n    id: 'ACT-006',\n    studentId: 'STU-002',\n    studentName: 'Jane Smith',\n    title: 'Data Science Bootcamp',\n    category: 'Workshop',\n    date: new Date('2024-02-01'),\n    description: 'Intensive bootcamp on data analysis and machine learning.',\n    status: 'Pending',\n    credits: 3,\n  },\n    {\n    id: 'ACT-007',\n    studentId: 'STU-001',\n    studentName: 'Tahzeeb',\n    title: 'Leadership Role in Coding Club',\n    category: 'Club Activity',\n    date: new Date('2023-05-20'),\n    description: 'Served as the president of the university coding club for the academic year 2022-2023.',\n    status: 'Approved',\n    credits: 3,\n  },\n  {\n    id: 'ACT-008',\n    studentId: 'STU-003',\n    studentName: 'Sam Wilson',\n    title: 'Community Tree Planting',\n    category: 'Community Service',\n    date: new Date('2023-04-22'),\n    description: 'Volunteered for a local environmental group to plant 100 trees.',\n    status: 'Pending',\n    credits: 1,\n  },\n];\n"],"names":[],"mappings":";;;;;;;;;AACA;;AAEA,MAAM,gBAAgB,mIAAA,CAAA,oBAAiB,CAAC,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,mBAAmB,YAAY;AAC9F,MAAM,gBAAgB,mIAAA,CAAA,oBAAiB,CAAC,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,mBAAmB,YAAY;AAGvF,MAAM,QAAmB;IAC9B;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,WAAW;QACX,OAAO;QACP,MAAM;QACN,MAAM;QACN,gBAAgB;IAClB;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,WAAW;QACX,OAAO;QACP,MAAM;QACN,MAAM;IACR;CACD;AAEM,MAAM,UAAU,KAAK,CAAC,EAAE,EAAE,2EAA2E;AACrG,MAAM,cAAc,KAAK,CAAC,EAAE;AAE5B,MAAM,iBAAiC;IAC5C,KAAK;IACL,YAAY;IACZ,cAAc;IACd,eAAe;AACjB;AAEO,MAAM,cAA2B;IACtC,cAAc;IACd,SAAS;IACT,cAAc;IACd,OAAO;AACT;AAEO,MAAM,qBAAyC;IAClD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAEM,MAAM,aAAyB;IACpC;QACE,IAAI;QACJ,WAAW;QACX,aAAa;QACb,OAAO;QACP,UAAU;QACV,MAAM,IAAI,KAAK;QACf,aAAa;QACb,QAAQ;QACR,SAAS;IACX;IACA;QACE,IAAI;QACJ,WAAW;QACX,aAAa;QACb,OAAO;QACP,UAAU;QACV,MAAM,IAAI,KAAK;QACf,aAAa;QACb,QAAQ;QACR,SAAS;IACX;IACA;QACE,IAAI;QACJ,WAAW;QACX,aAAa;QACb,OAAO;QACP,UAAU;QACV,MAAM,IAAI,KAAK;QACf,aAAa;QACb,QAAQ;QACR,SAAS;IACX;IACA;QACE,IAAI;QACJ,WAAW;QACX,aAAa;QACb,OAAO;QACP,UAAU;QACV,MAAM,IAAI,KAAK;QACf,aAAa;QACb,QAAQ;QACR,SAAS;IACX;IACA;QACE,IAAI;QACJ,WAAW;QACX,aAAa;QACb,OAAO;QACP,UAAU;QACV,MAAM,IAAI,KAAK;QACf,aAAa;QACb,QAAQ;QACR,SAAS;IACX;IACA;QACE,IAAI;QACJ,WAAW;QACX,aAAa;QACb,OAAO;QACP,UAAU;QACV,MAAM,IAAI,KAAK;QACf,aAAa;QACb,QAAQ;QACR,SAAS;IACX;IACE;QACA,IAAI;QACJ,WAAW;QACX,aAAa;QACb,OAAO;QACP,UAAU;QACV,MAAM,IAAI,KAAK;QACf,aAAa;QACb,QAAQ;QACR,SAAS;IACX;IACA;QACE,IAAI;QACJ,WAAW;QACX,aAAa;QACb,OAAO;QACP,UAAU;QACV,MAAM,IAAI,KAAK;QACf,aAAa;QACb,QAAQ;QACR,SAAS;IACX;CACD","debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["'use server';\n\nimport { generateAiTwinMessage } from \"@/ai/flows/ai-twin\";\nimport { activities, student, academicRecord } from \"@/lib/mock-data\";\nimport { format } from \"date-fns\";\n\nconst approvedActivities = activities\n    .filter(act => act.status === 'Approved' && act.studentId === student.id)\n    .map(act => `- ${act.title}: ${act.description} (Completed: ${format(act.date, 'PPP')})`)\n    .join('\\n');\n\nexport async function getAiTwinMessageAction() {\n    // Check if the Gemini API key is missing.\n    if (!process.env.GEMINI_API_KEY) {\n        console.warn(\"GEMINI_API_KEY is not set. Using a fallback message for AI Twin.\");\n        return {\n            message: `Hi ${student.name.split(' ')[0]}! Your AI Twin is currently offline. Please add your Gemini API key to the .env file to enable this feature.`,\n            error: \"API key not configured.\",\n        };\n    }\n\n    try {\n        const result = await generateAiTwinMessage({\n            studentName: student.name,\n            achievements: approvedActivities,\n            gpa: academicRecord.gpa,\n            degreeProgress: (academicRecord.creditsEarned / academicRecord.totalCredits) * 100,\n        });\n        return {\n            message: result.message,\n            error: null,\n        };\n    } catch (error: any) {\n        console.error(\"Error getting AI Twin message:\", error);\n        // Provide a more specific fallback if the API key is expired.\n        if (error.message?.includes(\"API key expired\")) {\n            return {\n                message: `Hi ${student.name.split(' ')[0]}! It looks like your API key has expired. Please renew it to get personalized insights.`,\n                error: \"API key expired.\",\n            };\n        }\n        return {\n            message: `Hi ${student.name.split(' ')[0]}! I'm having a little trouble gathering my thoughts right now. Please check back in a bit!`,\n            error: \"An unexpected error occurred.\",\n        };\n    }\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;;;;;AAEA,MAAM,qBAAqB,0HAAA,CAAA,aAAU,CAChC,MAAM,CAAC,CAAA,MAAO,IAAI,MAAM,KAAK,cAAc,IAAI,SAAS,KAAK,0HAAA,CAAA,UAAO,CAAC,EAAE,EACvE,GAAG,CAAC,CAAA,MAAO,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,IAAI,WAAW,CAAC,aAAa,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,IAAI,EAAE,OAAO,CAAC,CAAC,EACvF,IAAI,CAAC;AAEH,eAAe;IAClB,0CAA0C;IAC1C,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;QAC7B,QAAQ,IAAI,CAAC;QACb,OAAO;YACH,SAAS,CAAC,GAAG,EAAE,0HAAA,CAAA,UAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,4GAA4G,CAAC;YACvJ,OAAO;QACX;IACJ;IAEA,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,gIAAA,CAAA,wBAAqB,AAAD,EAAE;YACvC,aAAa,0HAAA,CAAA,UAAO,CAAC,IAAI;YACzB,cAAc;YACd,KAAK,0HAAA,CAAA,iBAAc,CAAC,GAAG;YACvB,gBAAgB,AAAC,0HAAA,CAAA,iBAAc,CAAC,aAAa,GAAG,0HAAA,CAAA,iBAAc,CAAC,YAAY,GAAI;QACnF;QACA,OAAO;YACH,SAAS,OAAO,OAAO;YACvB,OAAO;QACX;IACJ,EAAE,OAAO,OAAY;QACjB,QAAQ,KAAK,CAAC,kCAAkC;QAChD,8DAA8D;QAC9D,IAAI,MAAM,OAAO,EAAE,SAAS,oBAAoB;YAC5C,OAAO;gBACH,SAAS,CAAC,GAAG,EAAE,0HAAA,CAAA,UAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,uFAAuF,CAAC;gBAClI,OAAO;YACX;QACJ;QACA,OAAO;YACH,SAAS,CAAC,GAAG,EAAE,0HAAA,CAAA,UAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,0FAA0F,CAAC;YACrI,OAAO;QACX;IACJ;AACJ;;;IAnCsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getAiTwinMessageAction as '00592e79e2c4e1ab124f927cfa0502d2635d4b4469'} from 'ACTIONS_MODULE0'\nexport {generateAiTwinMessage as '40a2595bee215bd34ead14a88beb34ab1e432b55f8'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 609, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 690, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 800, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Area = registerClientReference(\n    function() { throw new Error(\"Attempted to call Area() from the server but Area is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Area\",\n);\nexport const AreaChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call AreaChart() from the server but AreaChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"AreaChart\",\n);\nexport const Bar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Bar() from the server but Bar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Bar\",\n);\nexport const BarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call BarChart() from the server but BarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"BarChart\",\n);\nexport const CartesianGrid = registerClientReference(\n    function() { throw new Error(\"Attempted to call CartesianGrid() from the server but CartesianGrid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"CartesianGrid\",\n);\nexport const Cell = registerClientReference(\n    function() { throw new Error(\"Attempted to call Cell() from the server but Cell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Cell\",\n);\nexport const ChartContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartContainer() from the server but ChartContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartContainer\",\n);\nexport const ChartLegend = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegend() from the server but ChartLegend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartLegend\",\n);\nexport const ChartLegendContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegendContent() from the server but ChartLegendContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartLegendContent\",\n);\nexport const ChartStyle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartStyle() from the server but ChartStyle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartStyle\",\n);\nexport const ChartTooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltip() from the server but ChartTooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartTooltip\",\n);\nexport const ChartTooltipContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltipContent() from the server but ChartTooltipContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartTooltipContent\",\n);\nexport const ComposedChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComposedChart() from the server but ComposedChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ComposedChart\",\n);\nexport const Funnel = registerClientReference(\n    function() { throw new Error(\"Attempted to call Funnel() from the server but Funnel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Funnel\",\n);\nexport const FunnelChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call FunnelChart() from the server but FunnelChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"FunnelChart\",\n);\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Label\",\n);\nexport const LabelList = registerClientReference(\n    function() { throw new Error(\"Attempted to call LabelList() from the server but LabelList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"LabelList\",\n);\nexport const Legend = registerClientReference(\n    function() { throw new Error(\"Attempted to call Legend() from the server but Legend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Legend\",\n);\nexport const Line = registerClientReference(\n    function() { throw new Error(\"Attempted to call Line() from the server but Line is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Line\",\n);\nexport const LineChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call LineChart() from the server but LineChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"LineChart\",\n);\nexport const Pie = registerClientReference(\n    function() { throw new Error(\"Attempted to call Pie() from the server but Pie is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Pie\",\n);\nexport const PieChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call PieChart() from the server but PieChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"PieChart\",\n);\nexport const PolarAngleAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarAngleAxis() from the server but PolarAngleAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"PolarAngleAxis\",\n);\nexport const PolarGrid = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarGrid() from the server but PolarGrid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"PolarGrid\",\n);\nexport const PolarRadiusAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarRadiusAxis() from the server but PolarRadiusAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"PolarRadiusAxis\",\n);\nexport const Radar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Radar() from the server but Radar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Radar\",\n);\nexport const RadarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadarChart() from the server but RadarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"RadarChart\",\n);\nexport const RadialBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadialBar() from the server but RadialBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"RadialBar\",\n);\nexport const RadialBarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadialBarChart() from the server but RadialBarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"RadialBarChart\",\n);\nexport const ReferenceArea = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceArea() from the server but ReferenceArea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ReferenceArea\",\n);\nexport const ReferenceDot = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceDot() from the server but ReferenceDot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ReferenceDot\",\n);\nexport const ReferenceLine = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceLine() from the server but ReferenceLine is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ReferenceLine\",\n);\nexport const ResponsiveContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ResponsiveContainer() from the server but ResponsiveContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ResponsiveContainer\",\n);\nexport const Sankey = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sankey() from the server but Sankey is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Sankey\",\n);\nexport const Scatter = registerClientReference(\n    function() { throw new Error(\"Attempted to call Scatter() from the server but Scatter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Scatter\",\n);\nexport const ScatterChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScatterChart() from the server but ScatterChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ScatterChart\",\n);\nexport const Tooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tooltip() from the server but Tooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Tooltip\",\n);\nexport const Treemap = registerClientReference(\n    function() { throw new Error(\"Attempted to call Treemap() from the server but Treemap is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"Treemap\",\n);\nexport const XAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call XAxis() from the server but XAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"XAxis\",\n);\nexport const YAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call YAxis() from the server but YAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"YAxis\",\n);\nexport const ZAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call ZAxis() from the server but ZAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ZAxis\",\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1016, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Area = registerClientReference(\n    function() { throw new Error(\"Attempted to call Area() from the server but Area is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Area\",\n);\nexport const AreaChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call AreaChart() from the server but AreaChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"AreaChart\",\n);\nexport const Bar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Bar() from the server but Bar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Bar\",\n);\nexport const BarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call BarChart() from the server but BarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"BarChart\",\n);\nexport const CartesianGrid = registerClientReference(\n    function() { throw new Error(\"Attempted to call CartesianGrid() from the server but CartesianGrid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"CartesianGrid\",\n);\nexport const Cell = registerClientReference(\n    function() { throw new Error(\"Attempted to call Cell() from the server but Cell is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Cell\",\n);\nexport const ChartContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartContainer() from the server but ChartContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartContainer\",\n);\nexport const ChartLegend = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegend() from the server but ChartLegend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartLegend\",\n);\nexport const ChartLegendContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegendContent() from the server but ChartLegendContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartLegendContent\",\n);\nexport const ChartStyle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartStyle() from the server but ChartStyle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartStyle\",\n);\nexport const ChartTooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltip() from the server but ChartTooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartTooltip\",\n);\nexport const ChartTooltipContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltipContent() from the server but ChartTooltipContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartTooltipContent\",\n);\nexport const ComposedChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call ComposedChart() from the server but ComposedChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ComposedChart\",\n);\nexport const Funnel = registerClientReference(\n    function() { throw new Error(\"Attempted to call Funnel() from the server but Funnel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Funnel\",\n);\nexport const FunnelChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call FunnelChart() from the server but FunnelChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"FunnelChart\",\n);\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Label\",\n);\nexport const LabelList = registerClientReference(\n    function() { throw new Error(\"Attempted to call LabelList() from the server but LabelList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"LabelList\",\n);\nexport const Legend = registerClientReference(\n    function() { throw new Error(\"Attempted to call Legend() from the server but Legend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Legend\",\n);\nexport const Line = registerClientReference(\n    function() { throw new Error(\"Attempted to call Line() from the server but Line is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Line\",\n);\nexport const LineChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call LineChart() from the server but LineChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"LineChart\",\n);\nexport const Pie = registerClientReference(\n    function() { throw new Error(\"Attempted to call Pie() from the server but Pie is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Pie\",\n);\nexport const PieChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call PieChart() from the server but PieChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"PieChart\",\n);\nexport const PolarAngleAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarAngleAxis() from the server but PolarAngleAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"PolarAngleAxis\",\n);\nexport const PolarGrid = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarGrid() from the server but PolarGrid is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"PolarGrid\",\n);\nexport const PolarRadiusAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call PolarRadiusAxis() from the server but PolarRadiusAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"PolarRadiusAxis\",\n);\nexport const Radar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Radar() from the server but Radar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Radar\",\n);\nexport const RadarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadarChart() from the server but RadarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"RadarChart\",\n);\nexport const RadialBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadialBar() from the server but RadialBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"RadialBar\",\n);\nexport const RadialBarChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call RadialBarChart() from the server but RadialBarChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"RadialBarChart\",\n);\nexport const ReferenceArea = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceArea() from the server but ReferenceArea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ReferenceArea\",\n);\nexport const ReferenceDot = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceDot() from the server but ReferenceDot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ReferenceDot\",\n);\nexport const ReferenceLine = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReferenceLine() from the server but ReferenceLine is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ReferenceLine\",\n);\nexport const ResponsiveContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ResponsiveContainer() from the server but ResponsiveContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ResponsiveContainer\",\n);\nexport const Sankey = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sankey() from the server but Sankey is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Sankey\",\n);\nexport const Scatter = registerClientReference(\n    function() { throw new Error(\"Attempted to call Scatter() from the server but Scatter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Scatter\",\n);\nexport const ScatterChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScatterChart() from the server but ScatterChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ScatterChart\",\n);\nexport const Tooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call Tooltip() from the server but Tooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Tooltip\",\n);\nexport const Treemap = registerClientReference(\n    function() { throw new Error(\"Attempted to call Treemap() from the server but Treemap is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"Treemap\",\n);\nexport const XAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call XAxis() from the server but XAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"XAxis\",\n);\nexport const YAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call YAxis() from the server but YAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"YAxis\",\n);\nexport const ZAxis = registerClientReference(\n    function() { throw new Error(\"Attempted to call ZAxis() from the server but ZAxis is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ZAxis\",\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { academicRecord, activities, student } from '@/lib/mock-data';\nimport {\n  BarChart,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Cell,\n  Bar,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent\n} from '@/components/ui/chart';\nimport { Activity } from '@/lib/types';\nimport { Award, BookOpen, CalendarClock, GraduationCap, Target, Bot, Github, GitPullRequest, GitCommit } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { getAiTwinMessageAction } from './actions';\nimport Image from 'next/image';\nimport { student as defaultStudent } from '@/lib/mock-data';\nimport { Button } from '@/components/ui/button';\nimport Link from 'next/link';\n\nconst getStatusVariant = (status: Activity['status']) => {\n  switch (status) {\n    case 'Approved':\n      return 'default';\n    case 'Pending':\n      return 'secondary';\n    case 'Rejected':\n      return 'destructive';\n    default:\n      return 'outline';\n  }\n};\n\nconst activityData = activities.reduce((acc, activity) => {\n  const existing = acc.find((item) => item.category === activity.category);\n  if (existing) {\n    existing.count += 1;\n  } else {\n    acc.push({ category: activity.category, count: 1 });\n  }\n  return acc;\n}, [] as { category: string; count: number }[]);\n\nconst totalActivityCredits = activities\n  .filter((act) => act.status === 'Approved')\n  .reduce((sum, act) => sum + act.credits, 0);\n\nconst chartConfig = {\n  count: {\n    label: \"Activities\",\n  },\n};\n\nconst chartColors = [\n  \"hsl(var(--chart-1))\",\n  \"hsl(var(--chart-2))\",\n  \"hsl(var(--chart-3))\",\n  \"hsl(var(--chart-4))\",\n  \"hsl(var(--chart-5))\",\n];\n\nexport default async function DashboardPage() {\n    const { message: aiTwinMessage } = await getAiTwinMessageAction();\n\n  return (\n    <div className=\"flex flex-col gap-8\">\n      <div>\n        <h1 className=\"font-headline text-3xl font-bold tracking-tight\">\n          Welcome back, {student.name.split(' ')[0]}!\n        </h1>\n        <p className=\"text-muted-foreground\">\n          Here's a snapshot of your achievements and progress.\n        </p>\n      </div>\n\n       <Card className=\"w-full transition-transform duration-300 ease-in-out hover:scale-[1.02] hover:shadow-2xl\">\n        <CardContent className=\"p-6 flex flex-col sm:flex-row items-center gap-6\">\n          <Image\n            src={defaultStudent.avatarUrl}\n            alt=\"AI Twin\"\n            width={80}\n            height={80}\n            className=\"rounded-full border-4 border-primary/50 shadow-lg\"\n            data-ai-hint=\"futuristic avatar\"\n          />\n          <div className=\"text-center sm:text-left\">\n            <div className=\"flex items-center gap-2 justify-center sm:justify-start\">\n              <Bot className=\"h-6 w-6 text-primary\"/>\n              <h3 className=\"text-xl font-headline font-semibold text-primary\">Your AI Twin Says...</h3>\n            </div>\n            <p className=\"text-muted-foreground mt-2 italic\">\n              \"{aiTwinMessage}\"\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <Card className=\"transition-transform duration-300 ease-in-out hover:scale-[1.02] hover:shadow-2xl\">\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">GPA</CardTitle>\n            <GraduationCap className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{academicRecord.gpa.toFixed(2)}</div>\n            <p className=\"text-xs text-muted-foreground\">Your current Grade Point Average.</p>\n          </CardContent>\n        </Card>\n        <Card className=\"transition-transform duration-300 ease-in-out hover:scale-[1.02] hover:shadow-2xl\">\n          <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Attendance</CardTitle>\n            <CalendarClock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{academicRecord.attendance}%</div>\n            <p className=\"text-xs text-muted-foreground\">Your overall attendance rate.</p>\n          </CardContent>\n        </Card>\n        <Card className=\"transition-transform duration-300 ease-in-out hover:scale-[1.02] hover:shadow-2xl\">\n           <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Activity Credits</CardTitle>\n            <Award className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{totalActivityCredits}</div>\n            <p className=\"text-xs text-muted-foreground\">Credits from approved activities.</p>\n          </CardContent>\n        </Card>\n        <Card className=\"transition-transform duration-300 ease-in-out hover:scale-[1.02] hover:shadow-2xl\">\n           <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Degree Progress</CardTitle>\n            <Target className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n                {academicRecord.creditsEarned} / {academicRecord.totalCredits}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n                {((academicRecord.creditsEarned / academicRecord.totalCredits) * 100).toFixed(0)}% towards your degree.\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-6 lg:grid-cols-5\">\n        <Card className=\"lg:col-span-3 transition-transform duration-300 ease-in-out hover:scale-[1.02] hover:shadow-2xl\">\n          <CardHeader>\n            <CardTitle>Recent Activities</CardTitle>\n            <CardDescription>\n              A log of your most recently submitted activities.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Title</TableHead>\n                  <TableHead>Category</TableHead>\n                  <TableHead>Date</TableHead>\n                  <TableHead className=\"text-right\">Status</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {activities.slice(0, 5).map((activity) => (\n                  <TableRow key={activity.id}>\n                    <TableCell className=\"font-medium\">\n                      {activity.title}\n                    </TableCell>\n                    <TableCell>{activity.category}</TableCell>\n                    <TableCell>\n                      {format(new Date(activity.date), 'PPP')}\n                    </TableCell>\n                    <TableCell className=\"text-right\">\n                      <Badge variant={getStatusVariant(activity.status)}>\n                        {activity.status}\n                      </Badge>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n        <Card className=\"lg:col-span-2 transition-transform duration-300 ease-in-out hover:scale-[1.02] hover:shadow-2xl\">\n          <CardHeader>\n            <CardTitle>Activity Breakdown</CardTitle>\n            <CardDescription>\n              Your involvement across different activity types.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"pl-2\">\n            <ChartContainer config={chartConfig} className=\"h-64 w-full\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart\n                  data={activityData}\n                  layout=\"vertical\"\n                  margin={{ left: 10, right: 10, top: 10, bottom: 10 }}\n                >\n                   <defs>\n                     {chartColors.map((color, index) => (\n                        <linearGradient key={`3d-gradient-${index}`} id={`3d-gradient-${index}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                          <stop offset=\"0%\" stopColor={color} stopOpacity={0.7}/>\n                          <stop offset=\"100%\" stopColor={color} stopOpacity={1}/>\n                        </linearGradient>\n                      ))}\n                  </defs>\n                  <YAxis\n                    dataKey=\"category\"\n                    type=\"category\"\n                    tickLine={false}\n                    axisLine={false}\n                    tick={{ fill: 'hsl(var(--muted-foreground))', fontSize: 12 }}\n                    width={110}\n                  />\n                  <XAxis dataKey=\"count\" type=\"number\" hide />\n                  <ChartTooltip\n                    cursor={{ fill: 'hsl(var(--muted))' }}\n                    content={<ChartTooltipContent />}\n                  />\n                  <Bar\n                    dataKey=\"count\"\n                    radius={[0, 4, 4, 0]}\n                  >\n                    {activityData.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={`url(#3d-gradient-${index % chartColors.length})`} />\n                    ))}\n                  </Bar>\n                </BarChart>\n              </ResponsiveContainer>\n            </ChartContainer>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}